{"version":3,"file":"static/js/712.d2f2c669.chunk.js","mappings":"qKAEA,SAASA,EAAeC,EAAeC,EAAYC,GAC/C,MAAMC,EAAQH,EAAcI,WAC5B,OAAOC,EAAAA,EAAAA,GAAwBF,EAAOF,OAAuBK,IAAXJ,EAAuBA,EAASC,EAAMD,OAAQF,EACpG,CCLA,SAASO,EAAmBC,EAAYC,GACpC,OAAQD,IAAaC,IACjBD,GAAsB,SACtBA,CACR,C,sBCFA,MAAME,EAAiB,IAAIC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACGC,EAAAA,ICPP,MAAMC,EACFC,WAAAA,GACIC,KAAKC,cAAgB,EACzB,CACAC,GAAAA,CAAIC,GCNR,IAAuBC,EAAKC,EDQpB,OCReD,EDODJ,KAAKC,cCPCI,EDOcF,GCNX,IAAvBC,EAAIE,QAAQD,IACZD,EAAIG,KAAKF,GDMF,ICJf,SAAoBD,EAAKC,GACrB,MAAMG,EAAQJ,EAAIE,QAAQD,GACtBG,GAAS,GACTJ,EAAIK,OAAOD,EAAO,EAC1B,CDAqBE,CAAWV,KAAKC,cAAeE,EAChD,CACAQ,MAAAA,CAAOC,EAAGC,EAAGC,GACT,MAAMC,EAAmBf,KAAKC,cAAce,OAC5C,GAAKD,EAEL,GAAyB,IAArBA,EAIAf,KAAKC,cAAc,GAAGW,EAAGC,EAAGC,QAG5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAKvC,MAAMd,EAAUH,KAAKC,cAAcgB,GACnCd,GAAWA,EAAQS,EAAGC,EAAGC,EAC7B,CAER,CACAI,OAAAA,GACI,OAAOlB,KAAKC,cAAce,MAC9B,CACAG,KAAAA,GACInB,KAAKC,cAAce,OAAS,CAChC,EE9BJ,SAASI,EAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,C,aCLA,IAAIC,EACJ,SAASC,IACLD,OAAMhC,CACV,CASA,MAAMkC,EAAO,CACTF,IAAKA,UACWhC,IAARgC,GACAE,EAAKC,IAAIC,EAAAA,GAAUC,cAAgBC,EAAAA,EAAmBC,gBAChDH,EAAAA,GAAUI,UACVC,YAAYT,OAEfA,GAEXG,IAAMO,IACFV,EAAMU,EACNC,eAAeV,EAAU,GCd3BW,EAAsB,CACxBC,aAAS7C,GAOb,MAAM8C,EAOFtC,WAAAA,CAAYuC,GAAoB,IAAAC,EAAA,SAAdC,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKzBzC,KAAK0C,QAAU,SAQf1C,KAAK2C,iBAAmB,KAIxB3C,KAAK4C,OAAS,CAAC,EACf5C,KAAK6C,gBAAkB,SAACC,GAAqB,IAAlBC,IAAMN,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,KAAAA,UAAA,GAC7B,MAAMO,EAAcvB,EAAKF,MAMrBgB,EAAKU,YAAcD,GACnBT,EAAKW,oBAETX,EAAKY,KAAOZ,EAAKH,QACjBG,EAAKa,WAAWN,GAEZP,EAAKH,UAAYG,EAAKY,MAAQZ,EAAKK,OAAOS,QAC1Cd,EAAKK,OAAOS,OAAO1C,OAAO4B,EAAKH,SAG/BW,GAAUR,EAAKK,OAAOU,eACtBf,EAAKK,OAAOU,cAAc3C,OAAO4B,EAAKH,QAE9C,EACApC,KAAKuD,aAAc,EACnBvD,KAAKoD,WAAWd,GAChBtC,KAAKwD,MAAQhB,EAAQgB,KACzB,CACAJ,UAAAA,CAAWhB,GA7DEqB,MA8DTzD,KAAKoC,QAAUA,EACfpC,KAAKiD,UAAYxB,EAAKF,MACQ,OAA1BvB,KAAK2C,uBAAyCpD,IAAZ6C,IAClCpC,KAAK2C,kBAjEAc,EAiE2BzD,KAAKoC,SAhErCsB,MAAMC,WAAWF,KAkEzB,CACAP,iBAAAA,GAAiD,IAA/BU,EAAcnB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAGzC,KAAKoC,QACpCpC,KAAK4D,eAAiBA,EACtB5D,KAAK6D,cAAgB7D,KAAKiD,SAC9B,CAyCAa,QAAAA,CAASC,GAIL,OAAO/D,KAAKgE,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGC,EAAWC,GACLlE,KAAK4C,OAAOqB,KACbjE,KAAK4C,OAAOqB,GAAa,IAAInE,GAEjC,MAAMqE,EAAcnE,KAAK4C,OAAOqB,GAAW/D,IAAIgE,GAC/C,MAAkB,WAAdD,EACO,KACHE,IAKAC,EAAAA,GAAMC,MAAK,KACFrE,KAAK4C,OAAOS,OAAOnC,WACpBlB,KAAKsE,MACT,GACF,EAGHH,CACX,CACAI,cAAAA,GACI,IAAK,MAAMC,KAAiBxE,KAAK4C,OAC7B5C,KAAK4C,OAAO4B,GAAerD,OAEnC,CAIAsD,MAAAA,CAAOC,EAAeC,GAClB3E,KAAK0E,cAAgBA,EACrB1E,KAAK2E,kBAAoBA,CAC7B,CAgBAjD,GAAAA,CAAIoB,GAAkB,IAAfC,IAAMN,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,KAAAA,UAAA,GACJM,GAAW/C,KAAK0E,cAIjB1E,KAAK0E,cAAc5B,EAAG9C,KAAK6C,iBAH3B7C,KAAK6C,gBAAgBC,EAAGC,EAKhC,CACA6B,eAAAA,CAAgBzB,EAAMf,EAASyC,GAC3B7E,KAAK0B,IAAIU,GACTpC,KAAKmD,UAAO5D,EACZS,KAAK4D,eAAiBT,EACtBnD,KAAK6D,cAAgB7D,KAAKiD,UAAY4B,CAC1C,CAKAC,IAAAA,CAAKhC,GAAwB,IAArBiC,IAAYtC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,KAAAA,UAAA,GAChBzC,KAAK6C,gBAAgBC,GACrB9C,KAAKmD,KAAOL,EACZ9C,KAAK6D,cAAgB7D,KAAK4D,oBAAiBrE,EAC3CwF,GAAgB/E,KAAKsE,OACjBtE,KAAK2E,mBACL3E,KAAK2E,mBACb,CAQAK,GAAAA,GAII,OAHI7C,EAAoBC,SACpBD,EAAoBC,QAAQ7B,KAAKP,MAE9BA,KAAKoC,OAChB,CAIA6C,WAAAA,GACI,OAAOjF,KAAKmD,IAChB,CAQA+B,WAAAA,GACI,MAAMlC,EAAcvB,EAAKF,MACzB,IAAKvB,KAAK2C,uBACkBpD,IAAxBS,KAAK4D,gBACLZ,EAAchD,KAAKiD,UA/NJ,GAgOf,OAAO,EAEX,MAAM4B,EAAQM,KAAKC,IAAIpF,KAAKiD,UAAYjD,KAAK6D,cAlO1B,IAoOnB,OAAOzC,EAAkBuC,WAAW3D,KAAKoC,SACrCuB,WAAW3D,KAAK4D,gBAAiBiB,EACzC,CAWAQ,KAAAA,CAAMC,GAEF,OADAtF,KAAKsE,OACE,IAAIiB,SAASC,IAChBxF,KAAKuD,aAAc,EACnBvD,KAAKyF,UAAYH,EAAeE,GAC5BxF,KAAK4C,OAAO8C,gBACZ1F,KAAK4C,OAAO8C,eAAe/E,QAC/B,IACDgF,MAAK,KACA3F,KAAK4C,OAAOgD,mBACZ5F,KAAK4C,OAAOgD,kBAAkBjF,SAElCX,KAAK6F,gBAAgB,GAE7B,CAMAvB,IAAAA,GACQtE,KAAKyF,YACLzF,KAAKyF,UAAUnB,OACXtE,KAAK4C,OAAOkD,iBACZ9F,KAAK4C,OAAOkD,gBAAgBnF,UAGpCX,KAAK6F,gBACT,CAMAE,WAAAA,GACI,QAAS/F,KAAKyF,SAClB,CACAI,cAAAA,UACW7F,KAAKyF,SAChB,CAUAO,OAAAA,GACIhG,KAAKuE,iBACLvE,KAAKsE,OACDtE,KAAK2E,mBACL3E,KAAK2E,mBAEb,EAEJ,SAASsB,EAAY3D,EAAME,GACvB,OAAO,IAAIH,EAAYC,EAAME,EACjC,C,aC5SA,SAAS0D,EAAejH,EAAeS,EAAK+D,GACpCxE,EAAckH,SAASzG,GACvBT,EAAcmH,SAAS1G,GAAKgC,IAAI+B,GAGhCxE,EAAcoH,SAAS3G,EAAKuG,EAAYxC,GAEhD,C,aCZA,SAAS6C,EAAqBrH,EAAeS,GACzC,MAAM6G,EAAatH,EAAcmH,SAAS,cAK1C,GCP6B3C,EDOD8C,ECNrBC,SAAQC,EAAAA,EAAAA,GAAchD,IAAUA,EAAMvD,KDOzC,OAAOqG,EAAWrG,IAAIR,GAErB,IAAK6G,GAAc1E,EAAAA,EAAmB6E,WAAY,CACnD,MAAMC,EAAgB,IAAI9E,EAAAA,EAAmB6E,WAAW,QACxDzH,EAAcoH,SAAS,aAAcM,GACrCA,EAAczG,IAAIR,EACtB,CCdJ,IAAiC+D,CDejC,C,aEfA,SAASmD,EAAqB3H,GAC1B,OAAOA,EAAcG,MAAMyH,EAAAA,EAC/B,CCHA,SAASC,EAAK5C,GACV,IAAI6C,EACJ,MAAO,UACYxH,IAAXwH,IACAA,EAAS7C,KACN6C,EAEf,CCNA,MAAMC,EAAyCF,GAAK,SAAgCvH,IAA1B0H,OAAOC,iBCAjE,MAAMC,EACFpH,WAAAA,CAAYqH,GAERpH,KAAKsE,KAAO,IAAMtE,KAAKqH,OAAO,QAC9BrH,KAAKoH,WAAaA,EAAWE,OAAOd,QACxC,CACA,YAAIe,GACA,OAAOhC,QAAQiC,IAAIxH,KAAKoH,WAAWK,KAAKhC,GAAcA,EAAU8B,WACpE,CAIAG,MAAAA,CAAOC,GACH,OAAO3H,KAAKoH,WAAW,GAAGO,EAC9B,CACAC,MAAAA,CAAOD,EAAUE,GACb,IAAK,IAAI5G,EAAI,EAAGA,EAAIjB,KAAKoH,WAAWpG,OAAQC,IACxCjB,KAAKoH,WAAWnG,GAAG0G,GAAYE,CAEvC,CACAC,cAAAA,CAAeC,EAAUC,GACrB,MAAM/H,EAAgBD,KAAKoH,WAAWK,KAAKhC,GACnCuB,KAA4BvB,EAAUqC,eAC/BrC,EAAUqC,eAAeC,GAEP,oBAAbC,EACLA,EAASvC,QADf,IAIT,MAAO,KACHxF,EAAcgI,SAAQ,CAACC,EAAQjH,KAC3BiH,GAAUA,IACVlI,KAAKoH,WAAWnG,GAAGqD,MAAM,GAC3B,CAEV,CACA,QAAI7C,GACA,OAAOzB,KAAK0H,OAAO,OACvB,CACA,QAAIjG,CAAKA,GACLzB,KAAK4H,OAAO,OAAQnG,EACxB,CACA,SAAI0G,GACA,OAAOnI,KAAK0H,OAAO,QACvB,CACA,SAAIS,CAAMA,GACNnI,KAAK4H,OAAO,QAASO,EACzB,CACA,aAAIC,GACA,OAAOpI,KAAK0H,OAAO,YACvB,CACA,YAAIW,GACA,IAAIC,EAAM,EACV,IAAK,IAAIrH,EAAI,EAAGA,EAAIjB,KAAKoH,WAAWpG,OAAQC,IACxCqH,EAAMnD,KAAKmD,IAAIA,EAAKtI,KAAKoH,WAAWnG,GAAGoH,UAE3C,OAAOC,CACX,CACAjB,MAAAA,CAAOkB,GACHvI,KAAKoH,WAAWa,SAASO,GAAaA,EAASD,MACnD,CACAE,OAAAA,GACIzI,KAAKqH,OAAO,UAChB,CACAqB,IAAAA,GACI1I,KAAKqH,OAAO,OAChB,CACAsB,KAAAA,GACI3I,KAAKqH,OAAO,QAChB,CACAa,MAAAA,GACIlI,KAAKqH,OAAO,SAChB,CACAuB,QAAAA,GACI5I,KAAKqH,OAAO,WAChB,EC3EJ,MAAMwB,UAA+B1B,EACjCxB,IAAAA,CAAKmD,EAAWC,GACZ,OAAO/I,KAAKuH,SAASyB,QAAQF,GAAWnD,MAAK,QACjD,ECEJ,MAAMsD,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,ICTzDC,GACO,ECDb,SAASC,EAAYC,GACjB,MAAuB,oBAATA,GAAuB,mBAAoBA,CAC7D,CCFA,MAAMC,EAAsBC,GAAWC,MAAMC,QAAQF,IAAgC,kBAAdA,EAAO,GCIxEG,EAAgB,CAAC,ECDvB,SAASC,EAAa3F,EAAU4F,GAC5B,MAAMC,EAAWjD,EAAK5C,GACtB,MAAO,IAAM0F,EAAcE,IAAiBC,GAChD,CCJA,MAAMC,EAAqCH,GAAa,KACpD,IACII,SACKC,cAAc,OACdC,QAAQ,CAAEC,QAAS,GAAK,CAAEX,OAAQ,gBAC3C,CACA,MAAOY,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,gBCZGC,EAAsBC,IAAA,IAAE3J,EAAGC,EAAGC,EAAG0J,GAAED,EAAA,MAAK,gBAAgB3J,MAAMC,MAAMC,MAAM0J,IAAI,ECE9EC,EAAuB,CACzBC,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAsBT,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DU,QAAuBV,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDW,OAAsBX,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9DY,QAAuBZ,EAAoB,CAAC,IAAM,KAAM,IAAM,OCPlE,SAASa,EAAuB1B,GAC5B,OAAOjD,QAA2B,oBAAXiD,GAAyBO,MAC3CP,GACkB,kBAAXA,IACHA,KAAUgB,GAAwBT,MACvCR,EAAmBC,IAClBC,MAAMC,QAAQF,IAAWA,EAAO2B,MAAMD,GAC/C,CCXA,MAAME,EAAmB,CACrBC,OAAQ,EACRC,WAAY,EACZC,MAAO,G,aCHX,MAAMC,EAAuB,SAAChC,EAAQpB,GAEjC,IADLqD,EAAUjJ,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,GAELkJ,EAAS,GACb,MAAMC,EAAYzG,KAAKmD,IAAInD,KAAK0G,MAAMxD,EAAWqD,GAAa,GAC9D,IAAK,IAAIzK,EAAI,EAAGA,EAAI2K,EAAW3K,IAC3B0K,GAAUlC,EAAOxI,GAAK2K,EAAY,IAAM,KAE5C,MAAO,UAAUD,EAAOG,UAAU,EAAGH,EAAO3K,OAAS,KACzD,ECHA,SAAS+K,EAAwBtC,EAAQpB,GACrC,OAAKoB,EAGsB,oBAAXA,GAAyBO,IAC9ByB,EAAqBhC,EAAQpB,GAE/BmB,EAAmBC,GACjBa,EAAoBb,GAEtBC,MAAMC,QAAQF,GACZA,EAAOhC,KAAKuE,GAAkBD,EAAwBC,EAAe3D,IACxEoC,EAAqBI,UAGlBJ,EAAqBhB,QAb5B,CAeR,CCnBA,SAASwC,EAAoBC,EAASC,EAAWC,GAAuI,IAA5H,MAAEC,EAAQ,EAAC,SAAEhE,EAAW,IAAG,OAAEiE,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAE5B,EAAO,YAAW,MAAE6B,GAAQ/J,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGgK,EAAahK,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,QAAGlD,EACzK,MAAMmN,EAAkB,CACpB,CAACP,GAAYC,GAEbI,IACAE,EAAgBC,OAASH,GAC7B,MAAM/C,EAASsC,EAAwBpB,EAAMtC,GAIzCqB,MAAMC,QAAQF,KACdiD,EAAgBjD,OAASA,GACzBmD,EAAAA,EAAYnJ,OACZ4H,EAAiBG,QAErB,MAAM/F,EAAYyG,EAAQ/B,QAAQuC,EAAiB,CAC/CL,QACAhE,WACAoB,OAASC,MAAMC,QAAQF,GAAmB,SAATA,EACjCoD,KAAM,OACNC,WAAYR,EAAS,EACrBS,UAA0B,YAAfR,EAA2B,YAAc,SACpDE,kBAOJ,OALIG,EAAAA,EAAYnJ,OACZgC,EAAU8B,SAASyB,SAAQ,KACvBqC,EAAiBG,OAAO,IAGzB/F,CACX,CClCA,SAASqC,EAAerC,EAAWsC,GAC/BtC,EAAUsC,SAAWA,EACrBtC,EAAUuH,SAAW,IACzB,C,aCiBA,MAAMC,EAAaA,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOC,EAAAA,EACX,MAAMC,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYT,EAAKE,GACrD,IAAIQ,EACAC,EACAhN,EAAI,EACR,GACIgN,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWf,EAAWgB,EAAUX,EAAKE,GAAOK,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ9I,KAAK+I,IAAIF,GAfO,QAgBnB/M,EAfuB,IAgB7B,OAAOgN,CACX,CAK6BE,CAAgBP,EAAI,EAAG,EAAGN,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,EAAWU,EAAST,GAAIK,EAAKE,EACxE,CC9CA,MAAMW,EAAgB3E,GAAY4E,GAAMA,GAAK,GAAM5E,EAAO,EAAI4E,GAAK,GAAK,EAAI5E,EAAO,GAAK,EAAI4E,KAAO,ECA7FC,EAAiB7E,GAAY4E,GAAM,EAAI5E,EAAO,EAAI4E,GCElDnD,EAAwBmC,EAAY,IAAM,KAAM,IAAM,KACtDpC,EAAuBqD,EAAcpD,GACrCqD,EAA0BH,EAAanD,GCJvCuD,GAAcH,IAAOA,GAAK,GAAK,EAAI,GAAMpD,EAAOoD,GAAK,IAAO,EAAIlJ,KAAKsJ,IAAI,GAAI,IAAMJ,EAAI,KCCvFtD,GAAUsD,GAAM,EAAIlJ,KAAKuJ,IAAIvJ,KAAKwJ,KAAKN,IACvCrD,GAAUsD,EAAcvD,IACxB6D,GAAYR,EAAarD,ICFzB8D,GAAqB/L,GAAM,cAAcgM,KAAKhM,G,wBCDpD,MAAMiM,GAAYjM,GAAMqC,KAAK0G,MAAU,IAAJ/I,GAAc,ICF3CkM,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgBA,CAAC3F,EAAM4F,IAAcrM,GAChC0D,QAAsB,kBAAN1D,GACnBmM,GAAiBH,KAAKhM,IACtBA,EAAEsM,WAAW7F,IACZ4F,ICZT,SAAmBrM,GACf,OAAY,MAALA,CACX,CDWauM,CAAUvM,IACXwM,OAAOC,UAAUC,eAAeC,KAAK3M,EAAGqM,IAE9CO,GAAaA,CAACC,EAAOC,EAAOC,IAAW/M,IACzC,GAAiB,kBAANA,EACP,OAAOA,EACX,MAAOlC,EAAGC,EAAGC,EAAGgP,GAAShN,EAAEiN,MAAMf,IACjC,MAAO,CACH,CAACW,GAAQhM,WAAW/C,GACpB,CAACgP,GAAQjM,WAAW9C,GACpB,CAACgP,GAAQlM,WAAW7C,GACpBgP,WAAiBvQ,IAAVuQ,EAAsBnM,WAAWmM,GAAS,EACpD,EEnBCE,GAAU,IACTC,GAAAA,GACHC,UAAYpN,GAAMqC,KAAK0G,MAHL/I,KAAMqN,EAAAA,GAAAA,GAAM,EAAG,IAAKrN,GAGTsN,CAAatN,KAExCuN,GAAO,CACTvB,KAAoBI,GAAc,MAAO,OACzCoB,MAAqBZ,GAAW,MAAO,QAAS,QAChDQ,UAAW3F,IAAA,IAAC,IAAEgG,EAAG,MAAEC,EAAK,KAAEC,EAAMX,MAAOY,EAAU,GAAGnG,EAAA,MAAK,QACrDyF,GAAQE,UAAUK,GAClB,KACAP,GAAQE,UAAUM,GAClB,KACAR,GAAQE,UAAUO,GAClB,KACA1B,GAASe,GAAAA,GAAMI,UAAUQ,IACzB,GAAG,GCYX,MAAMC,GAAM,CACR7B,KAAoBI,GAAc,KAClCoB,MAhCJ,SAAkBxN,GACd,IAAI8N,EAAI,GACJC,EAAI,GACJhQ,EAAI,GACJD,EAAI,GAmBR,OAjBIkC,EAAE9B,OAAS,GACX4P,EAAI9N,EAAEgJ,UAAU,EAAG,GACnB+E,EAAI/N,EAAEgJ,UAAU,EAAG,GACnBjL,EAAIiC,EAAEgJ,UAAU,EAAG,GACnBlL,EAAIkC,EAAEgJ,UAAU,EAAG,KAInB8E,EAAI9N,EAAEgJ,UAAU,EAAG,GACnB+E,EAAI/N,EAAEgJ,UAAU,EAAG,GACnBjL,EAAIiC,EAAEgJ,UAAU,EAAG,GACnBlL,EAAIkC,EAAEgJ,UAAU,EAAG,GACnB8E,GAAKA,EACLC,GAAKA,EACLhQ,GAAKA,EACLD,GAAKA,GAEF,CACH2P,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASjQ,EAAG,IAClBiP,MAAOlP,EAAIkQ,SAASlQ,EAAG,IAAM,IAAM,EAE3C,EAIIsP,UAAWG,GAAKH,W,cC/BpB,MAAMa,GAAO,CACTjC,KAAoBI,GAAc,MAAO,OACzCoB,MAAqBZ,GAAW,MAAO,aAAc,aACrDQ,UAAW3F,IAAwD,IAAvD,IAAEyG,EAAG,WAAEC,EAAU,UAAEC,EAAWpB,MAAOY,EAAU,GAAGnG,EAC1D,MAAQ,QACJpF,KAAK0G,MAAMmF,GACX,KACAG,GAAAA,GAAQjB,UAAUnB,GAASkC,IAC3B,KACAE,GAAAA,GAAQjB,UAAUnB,GAASmC,IAC3B,KACAnC,GAASe,GAAAA,GAAMI,UAAUQ,IACzB,GAAG,GCbTU,GAAQ,CACVtC,KAAOhM,GAAMuN,GAAKvB,KAAKhM,IAAM6N,GAAI7B,KAAKhM,IAAMiO,GAAKjC,KAAKhM,GACtDwN,MAAQxN,GACAuN,GAAKvB,KAAKhM,GACHuN,GAAKC,MAAMxN,GAEbiO,GAAKjC,KAAKhM,GACRiO,GAAKT,MAAMxN,GAGX6N,GAAIL,MAAMxN,GAGzBoN,UAAYpN,GACY,kBAANA,EACRA,EACAA,EAAE0M,eAAe,OACba,GAAKH,UAAUpN,GACfiO,GAAKb,UAAUpN,ICtB3BuO,GAAa,qHCYnB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoBhO,GACzB,MAAMiO,EAAgBjO,EAAMkO,WACtBC,EAAS,GACTC,EAAU,CACZT,MAAO,GACPnB,OAAQ,GACR6B,IAAK,IAEHC,EAAQ,GACd,IAAI9Q,EAAI,EACR,MAmBM+Q,EAnBYN,EAAcO,QAAQT,IAAeU,IAC/Cd,GAAMtC,KAAKoD,IACXL,EAAQT,MAAM7Q,KAAKU,GACnB8Q,EAAMxR,KAAKgR,IACXK,EAAOrR,KAAK6Q,GAAMd,MAAM4B,KAEnBA,EAAY9C,WApBF,SAqBfyC,EAAQC,IAAIvR,KAAKU,GACjB8Q,EAAMxR,KAvBA,OAwBNqR,EAAOrR,KAAK2R,KAGZL,EAAQ5B,OAAO1P,KAAKU,GACpB8Q,EAAMxR,KAAK+Q,IACXM,EAAOrR,KAAKoD,WAAWuO,OAEzBjR,EA7BU,SAgCQ+Q,MAhCR,OAiChB,MAAO,CAAEJ,SAAQI,QAAOH,UAASE,QACrC,CACA,SAASI,GAAkBrP,GACvB,OAAO2O,GAAoB3O,GAAG8O,MAClC,CACA,SAASQ,GAAkBC,GACvB,MAAM,MAAEL,EAAK,MAAED,GAAUN,GAAoBY,GACvCC,EAAcN,EAAMhR,OAC1B,OAAQ8B,IACJ,IAAIyP,EAAS,GACb,IAAK,IAAItR,EAAI,EAAGA,EAAIqR,EAAarR,IAE7B,GADAsR,GAAUP,EAAM/Q,QACH1B,IAATuD,EAAE7B,GAAkB,CACpB,MAAMsI,EAAOwI,EAAM9Q,GAEfsR,GADAhJ,IAAS+H,GACCvC,GAASjM,EAAE7B,IAEhBsI,IAASgI,GACJH,GAAMlB,UAAUpN,EAAE7B,IAGlB6B,EAAE7B,EAEpB,CAEJ,OAAOsR,CAAM,CAErB,CACA,MAAMC,GAAwB1P,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAM2P,GAAU,CACZ3D,KA/EJ,SAAchM,GACV,OAAQY,MAAMZ,IACG,kBAANA,IACNA,EAAEiN,MAAMf,KAAahO,QAAU,IAC3B8B,EAAEiN,MAAMsB,KAAarQ,QAAU,GAChC,CACZ,EA0EIsP,MAAO6B,GACPC,qBACAM,kBATJ,SAA2B5P,GACvB,MAAM6P,EAASR,GAAkBrP,GAEjC,OADoBsP,GAAkBtP,EAC/B8P,CAAYD,EAAOlL,IAAI+K,IAClC,GC5EMK,GAAc,IAAIjT,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASkT,GAAmBhQ,GACxB,MAAOiQ,EAAMtP,GAASX,EAAEkQ,MAAM,GAAI,GAAGhB,MAAM,KAC3C,GAAa,gBAATe,EACA,OAAOjQ,EACX,MAAOmN,GAAUxM,EAAMsM,MAAMf,KAAe,GAC5C,IAAKiB,EACD,OAAOnN,EACX,MAAMmQ,EAAOxP,EAAMwO,QAAQhC,EAAQ,IACnC,IAAIiD,EAAeL,GAAYM,IAAIJ,GAAQ,EAAI,EAG/C,OAFI9C,IAAWxM,IACXyP,GAAgB,KACbH,EAAO,IAAMG,EAAeD,EAAO,GAC9C,CACA,MAAMG,GAAgB,uBAChB9L,GAAS,IACRmL,GACHC,kBAAoB5P,IAChB,MAAMuQ,EAAYvQ,EAAEiN,MAAMqD,IAC1B,OAAOC,EAAYA,EAAU5L,IAAIqL,IAAoBQ,KAAK,KAAOxQ,CAAC,GClB1E,MAAMyQ,GAAoB,I,OACnBC,EAEHpC,MAAK,GACLqC,gBAAiBrC,GACjBsC,aAActC,GACdvE,KAAMuE,GACNuC,OAAQvC,GAERwC,YAAaxC,GACbyC,eAAgBzC,GAChB0C,iBAAkB1C,GAClB2C,kBAAmB3C,GACnB4C,gBAAiB5C,GACjB9J,OAAM,GACN2M,aAAc3M,IAKZ4M,GAAuBxU,GAAQ6T,GAAkB7T,GCvBvD,SAASgT,GAAkBhT,EAAK+D,GAC5B,IAAI0Q,EAAmBD,GAAoBxU,GAI3C,OAHIyU,IAAqB7M,KACrB6M,EAAmB1B,IAEhB0B,EAAiBzB,kBAClByB,EAAiBzB,kBAAkBjP,QACnClE,CACV,CCHA,MAAM6U,GAAmB,IAAIxU,IAAI,CAAC,OAAQ,OAAQ,MCTlD,MAAMyU,GAAYC,GAAe,IAANA,EAAanP,KAAKoP,GACvCC,GAAU1R,IACZ,MAAM2R,EAAQJ,GAASlP,KAAKuP,MAAM5R,EAAE,GAAIA,EAAE,KAC1C,OAAO6R,GAAYF,EAAM,EAEvBG,GAAkB,CACpB/G,EAAG,EACHgH,EAAG,EACHC,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,OAAQ,EACRC,MAAQpS,IAAOqC,KAAK+I,IAAIpL,EAAE,IAAMqC,KAAK+I,IAAIpL,EAAE,KAAO,EAClD0R,UACAW,QAASX,GACTY,MAAQtS,GAAMuR,GAASlP,KAAKkQ,KAAKvS,EAAE,KACnCwS,MAAQxS,GAAMuR,GAASlP,KAAKkQ,KAAKvS,EAAE,KACnCyS,KAAOzS,IAAOqC,KAAK+I,IAAIpL,EAAE,IAAMqC,KAAK+I,IAAIpL,EAAE,KAAO,GAE/C6R,GAAeF,KACjBA,GAAgB,KACJ,IACRA,GAAS,KACNA,GAGLO,GAAUlS,GAAMqC,KAAKqQ,KAAK1S,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDmS,GAAUnS,GAAMqC,KAAKqQ,KAAK1S,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjD2S,GAAkB,CACpB5H,EAAG,GACHgH,EAAG,GACHa,EAAG,GACHZ,WAAY,GACZC,WAAY,GACZY,WAAY,GACZX,UACAC,UACAC,MAAQpS,IAAOkS,GAAOlS,GAAKmS,GAAOnS,IAAM,EACxC8S,QAAU9S,GAAM6R,GAAYN,GAASlP,KAAKuP,MAAM5R,EAAE,GAAIA,EAAE,MACxD+S,QAAU/S,GAAM6R,GAAYN,GAASlP,KAAKuP,OAAO5R,EAAE,GAAIA,EAAE,MACzDqS,QAfYX,GAgBZA,OAhBYA,GAiBZY,MAAQtS,GAAMuR,GAASlP,KAAKkQ,KAAKvS,EAAE,KACnCwS,MAAQxS,GAAMuR,GAASlP,KAAKkQ,KAAKvS,EAAE,KACnCyS,KAAOzS,IAAOqC,KAAK+I,IAAIpL,EAAE,IAAMqC,KAAK+I,IAAIpL,EAAE,KAAO,GAErD,SAASgT,GAAsB/C,GAC3B,OAAOA,EAAKgD,SAAS,SAAW,EAAI,CACxC,CACA,SAASC,GAAwB9F,EAAW6C,GACxC,IAAK7C,GAA2B,SAAdA,EACd,OAAO4F,GAAsB/C,GAEjC,MAAMkD,EAAgB/F,EAAUH,MAAM,gCACtC,IAAImG,EACAnG,EACJ,GAAIkG,EACAC,EAAUT,GACV1F,EAAQkG,MAEP,CACD,MAAME,EAAgBjG,EAAUH,MAAM,8BACtCmG,EAAUtB,GACV7E,EAAQoG,CACZ,CACA,IAAKpG,EACD,OAAO+F,GAAsB/C,GAEjC,MAAMqD,EAAcF,EAAQnD,GACtBnB,EAAS7B,EAAM,GAAGiC,MAAM,KAAKvK,IAAI4O,IACvC,MAA8B,oBAAhBD,EACRA,EAAYxE,GACZA,EAAOwE,EACjB,CAKA,SAASC,GAAyB5S,GAC9B,OAAOE,WAAWF,EAAM6S,OAC5B,CC3EA,MAAMC,GAAiBzT,GAAMA,IAAMmN,GAAAA,IAAUnN,IAAM0T,GAAAA,GAC7CC,GAAgB,IAAI7W,IAAI,CAAC,IAAK,IAAK,MACnC8W,GAAgC7W,EAAAA,EAAmByH,QAAQ5H,IAAS+W,GAActD,IAAIzT,KAY5F,MAAMiX,GAAmB,CAErBC,MAAOA,CAAArM,EAAAsM,KAAA,IAAC,EAAEhJ,GAAGtD,GAAE,YAAEuM,EAAc,IAAG,aAAEC,EAAe,KAAKF,EAAA,OAAKhJ,EAAEvF,IAAMuF,EAAEzI,IAAMzB,WAAWmT,GAAenT,WAAWoT,EAAa,EAC/HC,OAAQA,CAAAC,EAAAC,KAAA,IAAC,EAAErC,GAAGoC,GAAE,WAAEE,EAAa,IAAG,cAAEC,EAAgB,KAAKF,EAAA,OAAKrC,EAAEvM,IAAMuM,EAAEzP,IAAMzB,WAAWwT,GAAcxT,WAAWyT,EAAc,EAChIC,IAAKA,CAACC,EAAKC,KAAA,IAAE,IAAEF,GAAKE,EAAA,OAAK5T,WAAW0T,EAAI,EACxCG,KAAMA,CAACF,EAAKG,KAAA,IAAE,KAAED,GAAMC,EAAA,OAAK9T,WAAW6T,EAAK,EAC3CE,OAAQA,CAAAC,EAAAC,KAAA,IAAC,EAAE/C,GAAG8C,GAAE,IAAEN,GAAKO,EAAA,OAAKjU,WAAW0T,IAAQxC,EAAEvM,IAAMuM,EAAEzP,IAAI,EAC7DyS,MAAOA,CAAAC,EAAAC,KAAA,IAAC,EAAElK,GAAGiK,GAAE,KAAEN,GAAMO,EAAA,OAAKpU,WAAW6T,IAAS3J,EAAEvF,IAAMuF,EAAEzI,IAAI,EAE9DyI,EAAGA,CAACyJ,EAAKU,KAAA,IAAE,UAAE9H,GAAW8H,EAAA,OAAKhC,GAAwB9F,EAAW,IAAI,EACpE2E,EAAGA,CAACyC,EAAKW,KAAA,IAAE,UAAE/H,GAAW+H,EAAA,OAAKjC,GAAwB9F,EAAW,IAAI,GAGxEyG,GAAiB7B,WAAa6B,GAAiB9I,EAC/C8I,GAAiB5B,WAAa4B,GAAiB9B,EC9B/C,MAAMqD,GAAY,IAAItY,IACtB,IAAIuY,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqB5O,MAAM6O,KAAKL,IAAW5Q,QAAQkR,GAAaA,EAASC,mBACzEC,EAAoB,IAAI9Y,IAAI0Y,EAAmB7Q,KAAK+Q,GAAaA,EAAStM,WAC1EyM,EAAsB,IAAIC,IAKhCF,EAAkBzQ,SAASiE,IACvB,MAAM2M,EDRlB,SAAyC5Z,GACrC,MAAM4Z,EAAoB,GAQ1B,OAPAnC,GAA8BzO,SAASvI,IACnC,MAAM+D,EAAQxE,EAAcmH,SAAS1G,QACvBH,IAAVkE,IACAoV,EAAkBtY,KAAK,CAACb,EAAK+D,EAAMuB,QACnCvB,EAAM/B,IAAIhC,EAAI0P,WAAW,SAAW,EAAI,GAC5C,IAEGyJ,CACX,CCFsCC,CAAgC5M,GACrD2M,EAAkB7X,SAEvB2X,EAAoBjX,IAAIwK,EAAS2M,GACjC3M,EAAQnJ,SAAQ,IAGpBuV,EAAmBrQ,SAASuQ,GAAaA,EAASO,wBAElDL,EAAkBzQ,SAASiE,IACvBA,EAAQnJ,SACR,MAAMiW,EAAUL,EAAoB3T,IAAIkH,GACpC8M,GACAA,EAAQ/Q,SAAQsC,IAAkB,IAAhB7K,EAAK+D,GAAM8G,EACzB2B,EAAQ9F,SAAS1G,IAAMgC,IAAI+B,EAAM,GAEzC,IAGJ6U,EAAmBrQ,SAASuQ,GAAaA,EAASS,oBAElDX,EAAmBrQ,SAASuQ,SACUjZ,IAA9BiZ,EAASU,kBACTjS,OAAOkS,SAAS,EAAGX,EAASU,iBAChC,GAER,CACAd,IAAsB,EACtBD,IAAc,EACdD,GAAUjQ,SAASuQ,GAAaA,EAAS5P,aACzCsP,GAAU/W,OACd,CACA,SAASiY,KACLlB,GAAUjQ,SAASuQ,IACfA,EAASa,gBACLb,EAASC,mBACTL,IAAsB,EAC1B,GAER,CAKA,MAAMkB,GACFvZ,WAAAA,CAAYwZ,EAAqBC,EAAYzG,EAAM9M,EAAaiG,GAA0B,IAAjBuN,EAAOhX,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,IAAAA,UAAA,GAK5EzC,KAAK0Z,YAAa,EAMlB1Z,KAAKyZ,SAAU,EAKfzZ,KAAKyY,kBAAmB,EAKxBzY,KAAKmY,aAAc,EACnBnY,KAAKuZ,oBAAsB,IAAIA,GAC/BvZ,KAAKwZ,WAAaA,EAClBxZ,KAAK+S,KAAOA,EACZ/S,KAAKiG,YAAcA,EACnBjG,KAAKkM,QAAUA,EACflM,KAAKyZ,QAAUA,CACnB,CACAE,eAAAA,GACI3Z,KAAKmY,aAAc,EACfnY,KAAKyZ,SACLvB,GAAUhY,IAAIF,MACTmY,KACDA,IAAc,EACd/T,EAAAA,GAAMC,KAAK+U,IACXhV,EAAAA,GAAMwV,iBAAiBvB,OAI3BrY,KAAKqZ,gBACLrZ,KAAK4I,WAEb,CACAyQ,aAAAA,GACI,MAAM,oBAAEE,EAAmB,KAAExG,EAAI,QAAE7G,EAAO,YAAEjG,GAAgBjG,KAK5D,IAAK,IAAIiB,EAAI,EAAGA,EAAIsY,EAAoBvY,OAAQC,IAC5C,GAA+B,OAA3BsY,EAAoBtY,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM4Y,EAAe5T,GAAajB,MAC5B8U,EAAgBP,EAAoBA,EAAoBvY,OAAS,GACvE,QAAqBzB,IAAjBsa,EACAN,EAAoB,GAAKM,OAExB,GAAI3N,GAAW6G,EAAM,CACtB,MAAMgH,EAAc7N,EAAQ8N,UAAUjH,EAAM+G,QACxBva,IAAhBwa,GAA6C,OAAhBA,IAC7BR,EAAoB,GAAKQ,EAEjC,MAC+Bxa,IAA3Bga,EAAoB,KACpBA,EAAoB,GAAKO,GAEzB7T,QAAgC1G,IAAjBsa,GACf5T,EAAYvE,IAAI6X,EAAoB,GAE5C,MAEIA,EAAoBtY,GAAKsY,EAAoBtY,EAAI,EAIjE,CACAgZ,gBAAAA,GAAqB,CACrBlB,mBAAAA,GAAwB,CACxBmB,eAAAA,GAAoB,CACpBjB,eAAAA,GAAoB,CACpBrQ,QAAAA,GACI5I,KAAK0Z,YAAa,EAClB1Z,KAAKwZ,WAAWxZ,KAAKuZ,oBAAqBvZ,KAAK8Z,eAC/C5B,GAAUiC,OAAOna,KACrB,CACAkI,MAAAA,GACSlI,KAAK0Z,aACN1Z,KAAKmY,aAAc,EACnBD,GAAUiC,OAAOna,MAEzB,CACAoa,MAAAA,GACSpa,KAAK0Z,YACN1Z,KAAK2Z,iBACb,EC5JJ,MAAMU,GAAqBvX,GAAM,+BAA+BgM,KAAKhM,G,cCUrE,MAAMwX,GAEN,2DASA,SAASC,GAAiBnY,EAAS8J,GAAoB,IAAXsO,EAAK/X,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,EAEhD,MAAOgY,EAAOzS,GAVlB,SAA0B5F,GACtB,MAAM2N,EAAQuK,GAAsBI,KAAKtY,GACzC,IAAK2N,EACD,MAAO,CAAC,GACZ,MAAO,CAAE4K,EAAQC,EAAQ5S,GAAY+H,EACrC,MAAO,CAAC,KAAK4K,GAAUC,IAAU5S,EACrC,CAI8B6S,CAAiBzY,GAE3C,IAAKqY,EACD,OAEJ,MAAMK,EAAW7T,OAAO8T,iBAAiB7O,GAAS8O,iBAAiBP,GACnE,GAAIK,EAAU,CACV,MAAMG,EAAUH,EAASxE,OACzB,OAAO+D,GAAkBY,GAAWtX,WAAWsX,GAAWA,CAC9D,CACA,OAAOC,EAAAA,GAAAA,GAAmBlT,GACpBuS,GAAiBvS,EAAUkE,EAASsO,EAAQ,GAC5CxS,CACV,CCpCA,MAAMmT,GAAiBrY,GAAOyG,GAASA,EAAKuF,KAAKhM,GCK3CsY,GAAsB,CAACnL,GAAAA,GAAQuG,GAAAA,GAAIrF,GAAAA,GAASkK,GAAAA,GAASC,GAAAA,GAAIC,GAAAA,GCLlD,CACTzM,KAAOhM,GAAY,SAANA,EACbwN,MAAQxN,GAAMA,IDOZ0Y,GAA0B1Y,GAAMsY,GAAoBK,KAAKN,GAAcrY,IEH7E,MAAM4Y,WAA6BpC,GAC/BvZ,WAAAA,CAAYwZ,EAAqBC,EAAYzG,EAAM9M,EAAaiG,GAC5DyP,MAAMpC,EAAqBC,EAAYzG,EAAM9M,EAAaiG,GAAS,EACvE,CACAmN,aAAAA,GACI,MAAM,oBAAEE,EAAmB,QAAErN,EAAO,KAAE6G,GAAS/S,KAC/C,IAAKkM,IAAYA,EAAQ9J,QACrB,OACJuZ,MAAMtC,gBAIN,IAAK,IAAIpY,EAAI,EAAGA,EAAIsY,EAAoBvY,OAAQC,IAAK,CACjD,IAAI2a,EAAWrC,EAAoBtY,GACnC,GAAwB,kBAAb2a,IACPA,EAAWA,EAAStF,QAChB4E,EAAAA,GAAAA,GAAmBU,IAAW,CAC9B,MAAMd,EAAWP,GAAiBqB,EAAU1P,EAAQ9J,cACnC7C,IAAbub,IACAvB,EAAoBtY,GAAK6Z,GAEzB7Z,IAAMsY,EAAoBvY,OAAS,IACnChB,KAAK8Z,cAAgB8B,EAE7B,CAER,CAaA,GAPA5b,KAAK6b,wBAOAlc,EAAewT,IAAIJ,IAAwC,IAA/BwG,EAAoBvY,OACjD,OAEJ,MAAO8a,EAAQC,GAAUxC,EACnByC,EAAaR,GAAuBM,GACpCG,EAAaT,GAAuBO,GAI1C,GAAIC,IAAeC,EAMnB,GAAI1F,GAAcyF,IAAezF,GAAc0F,GAC3C,IAAK,IAAIhb,EAAI,EAAGA,EAAIsY,EAAoBvY,OAAQC,IAAK,CACjD,MAAMwC,EAAQ8V,EAAoBtY,GACb,kBAAVwC,IACP8V,EAAoBtY,GAAK0C,WAAWF,GAE5C,MAMAzD,KAAKyY,kBAAmB,CAEhC,CACAoD,oBAAAA,GACI,MAAM,oBAAEtC,EAAmB,KAAExG,GAAS/S,KAChCkc,EAAsB,GAC5B,IAAK,IAAIjb,EAAI,EAAGA,EAAIsY,EAAoBvY,OAAQC,KC9E/B,kBADTwC,EDgFO8V,EAAoBtY,IC9ElB,IAAVwC,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiBoL,GAAkBpL,KD4EtDyY,EAAoB3b,KAAKU,GCjFzC,IAAgBwC,EDoFJyY,EAAoBlb,QT5EhC,SAAqCuY,EAAqB2C,EAAqBnJ,GAC3E,IACIoJ,EADAlb,EAAI,EAER,KAAOA,EAAIsY,EAAoBvY,SAAWmb,GAAoB,CAC1D,MAAMP,EAAWrC,EAAoBtY,GACb,kBAAb2a,IACNxH,GAAiBjB,IAAIyI,IACtBnK,GAAoBmK,GAAUhK,OAAO5Q,SACrCmb,EAAqB5C,EAAoBtY,IAE7CA,GACJ,CACA,GAAIkb,GAAsBpJ,EACtB,IAAK,MAAMqJ,KAAaF,EACpB3C,EAAoB6C,GAAa1J,GAAkBK,EAAMoJ,EAGrE,CS4DYE,CAA4B9C,EAAqB2C,EAAqBnJ,EAE9E,CACAgG,mBAAAA,GACI,MAAM,QAAE7M,EAAO,oBAAEqN,EAAmB,KAAExG,GAAS/S,KAC/C,IAAKkM,IAAYA,EAAQ9J,QACrB,OACS,WAAT2Q,IACA/S,KAAKkZ,iBAAmBjS,OAAOqV,aAEnCtc,KAAKuc,eAAiB5F,GAAiB5D,GAAM7G,EAAQsQ,qBAAsBvV,OAAO8T,iBAAiB7O,EAAQ9J,UAC3GmX,EAAoB,GAAKvZ,KAAKuc,eAE9B,MAAME,EAAkBlD,EAAoBA,EAAoBvY,OAAS,QACjDzB,IAApBkd,GACAvQ,EAAQ9F,SAAS2M,EAAM0J,GAAiB3X,KAAK2X,GAAiB,EAEtE,CACAxD,eAAAA,GACI,MAAM,QAAE/M,EAAO,KAAE6G,EAAI,oBAAEwG,GAAwBvZ,KAC/C,IAAKkM,IAAYA,EAAQ9J,QACrB,OACJ,MAAMqB,EAAQyI,EAAQ9F,SAAS2M,GAC/BtP,GAASA,EAAMqB,KAAK9E,KAAKuc,gBAAgB,GACzC,MAAMG,EAAqBnD,EAAoBvY,OAAS,EAClD8Y,EAAgBP,EAAoBmD,GAC1CnD,EAAoBmD,GAAsB/F,GAAiB5D,GAAM7G,EAAQsQ,qBAAsBvV,OAAO8T,iBAAiB7O,EAAQ9J,UACzG,OAAlB0X,QAAiDva,IAAvBS,KAAK8Z,gBAC/B9Z,KAAK8Z,cAAgBA,GAGrB9Z,KAAK6Y,mBAAmB7X,QACxBhB,KAAK6Y,kBAAkB5Q,SAAQsC,IAA+C,IAA7CoS,EAAoBC,GAAoBrS,EACrE2B,EACK9F,SAASuW,GACTjb,IAAIkb,EAAoB,IAGrC5c,KAAK6b,sBACT,EEnHJ,MAAMgB,GAAeA,CAACpZ,EAAOsP,IAEZ,WAATA,MAKiB,kBAAVtP,IAAsBiG,MAAMC,QAAQlG,OAE1B,kBAAVA,IACNgP,GAAQ3D,KAAKrL,IAAoB,MAAVA,GACvBA,EAAM2L,WAAW,UCT1B,SAAS0N,GAAW1Q,EAAW2G,EAAMxJ,EAAMlI,GAMvC,MAAM0b,EAAiB3Q,EAAU,GACjC,GAAuB,OAAnB2Q,EACA,OAAO,EAMX,GAAa,YAAThK,GAA+B,eAATA,EACtB,OAAO,EACX,MAAMiK,EAAiB5Q,EAAUA,EAAUpL,OAAS,GAC9Cic,EAAqBJ,GAAaE,EAAgBhK,GAClDmK,EAAqBL,GAAaG,EAAgBjK,GAGxD,SAAKkK,IAAuBC,KA9BhC,SAA6B9Q,GACzB,MAAMhK,EAAUgK,EAAU,GAC1B,GAAyB,IAArBA,EAAUpL,OACV,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAImL,EAAUpL,OAAQC,IAClC,GAAImL,EAAUnL,KAAOmB,EACjB,OAAO,CAEnB,CAyBY+a,CAAoB/Q,KACb,WAAT7C,GAAqBD,EAAYC,KAAUlI,EACrD,CCvCA,MAAM+b,GAAa3Z,GAAoB,OAAVA,EAC7B,SAAS4Z,GAAiBjR,EAAS7B,EAAmCuP,GAAe,IAAhD,OAAExN,EAAM,WAAEC,EAAa,QAAQhC,EAChE,MAAM+S,EAAoBlR,EAAU9E,OAAO8V,IACrC5c,EAAQ8L,GAAyB,SAAfC,GAAyBD,EAAS,IAAM,EAC1D,EACAgR,EAAkBtc,OAAS,EACjC,OAAQR,QAA2BjB,IAAlBua,EAEXA,EADAwD,EAAkB9c,EAE5B,CCMA,MAAM+c,GACFxd,WAAAA,CAAWwK,GAAmH,IAAlH,SAAEiT,GAAW,EAAI,MAAEnR,EAAQ,EAAC,KAAE9C,EAAO,YAAW,OAAE+C,EAAS,EAAC,YAAEmR,EAAc,EAAC,WAAElR,EAAa,UAAW/J,GAAS+H,EAExHvK,KAAK0d,WAAY,EACjB1d,KAAK2d,qBAAsB,EAC3B3d,KAAK4d,UAAYnc,EAAKF,MACtBvB,KAAKwC,QAAU,CACXgb,WACAnR,QACA9C,OACA+C,SACAmR,cACAlR,gBACG/J,GAEPxC,KAAK6d,uBACT,CAWAC,aAAAA,GACI,OAAK9d,KAAK+d,YAEH/d,KAAK+d,WAAa/d,KAAK4d,UA/BZ,GAgCZ5d,KAAK+d,WAFA/d,KAAK4d,SAIpB,CAMA,YAAI9C,GAIA,OAHK9a,KAAKge,WAAche,KAAK2d,sBXEjCvE,KACAf,MWAWrY,KAAKge,SAChB,CAMAC,mBAAAA,CAAoB7R,EAAW0N,GAC3B9Z,KAAK+d,WAAatc,EAAKF,MACvBvB,KAAK2d,qBAAsB,EAC3B,MAAM,KAAE5K,EAAI,KAAExJ,EAAI,SAAElI,EAAQ,MAAEgL,EAAK,WAAEmN,EAAU,SAAE0E,EAAQ,YAAE5U,GAAiBtJ,KAAKwC,QAKjF,IAAK8G,IAAgBwT,GAAW1Q,EAAW2G,EAAMxJ,EAAMlI,GAAW,CAE9D,GAAIgI,IAAkCgD,EAKlC,OAJA6R,GACIA,EAASb,GAAiBjR,EAAWpM,KAAKwC,QAASsX,IACvDN,GAAcA,SACdxZ,KAAKme,yBAKLne,KAAKwC,QAAQ6F,SAAW,CAEhC,CACA,MAAM+V,EAAoBpe,KAAKqe,aAAajS,EAAW0N,IAC7B,IAAtBsE,IAEJpe,KAAKge,UAAY,CACb5R,YACA0N,mBACGsE,GAEPpe,KAAKse,iBACT,CACAA,cAAAA,GAAmB,CAMnB3Y,IAAAA,CAAKH,EAAS+Y,GACV,OAAOve,KAAKwe,uBAAuB7Y,KAAKH,EAAS+Y,EACrD,CACA9V,OAAAA,GACSzI,KAAKwC,QAAQic,eAElBze,KAAKwC,QAAQ+G,KAAO,YACpBvJ,KAAKwC,QAAQmI,KAAO,SACxB,CACAkT,qBAAAA,GACI7d,KAAKwe,uBAAyB,IAAIjZ,SAASC,IACvCxF,KAAKme,uBAAyB3Y,CAAO,GAE7C,EChHJ,MAAMkZ,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIvW,EAAW,EAEf,IAAIwW,EAAQD,EAAUE,KAAKzW,GAC3B,MAAQwW,EAAME,MAAQ1W,EAAWqW,IAC7BrW,GAHa,GAIbwW,EAAQD,EAAUE,KAAKzW,GAE3B,OAAOA,GAAYqW,GAAuBM,IAAW3W,CACzD,CCOA,MAAM4W,GAAYA,CAAC1G,EAAM2G,EAAIC,IAClB5G,GAAQ2G,EAAK3G,GAAQ4G,ECrBhC,SAASC,GAAS/Q,EAAGgR,EAAGnS,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDmB,EAAc,GAATgR,EAAIhR,GAASnB,EACzBA,EAAI,GACGmS,EACPnS,EAAI,EAAI,EACDmB,GAAKgR,EAAIhR,IAAM,EAAI,EAAInB,GAAK,EAChCmB,CACX,CCbA,SAASiR,GAAa1e,EAAGC,GACrB,OAAQwN,GAAOA,EAAI,EAAIxN,EAAID,CAC/B,CCSA,MAAM2e,GAAiBA,CAAChH,EAAM2G,EAAIpc,KAC9B,MAAM0c,EAAWjH,EAAOA,EAClBkH,EAAO3c,GAAKoc,EAAKA,EAAKM,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAIta,KAAKqQ,KAAKiK,EAAK,EAEnCC,GAAa,CAAC/O,GAAKN,GAAMU,IAE/B,SAAS4O,GAAOvO,GACZ,MAAM7H,GAFYzG,EAEQsO,EAFFsO,GAAWjE,MAAMlS,GAASA,EAAKuF,KAAKhM,MAA1CA,MAIlB,GADQ0D,QAAQ+C,IACX/C,QAAQ+C,GACT,OAAO,EACX,IAAIqW,EAAQrW,EAAK+G,MAAMc,GAKvB,OAJI7H,IAASwH,KAET6O,EFZR,SAAmBrV,GAAwC,IAAvC,IAAEyG,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEpB,GAAOvF,EACrDyG,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKQ,EAGA,CACD,MAAMoO,EAAInO,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5C,EAAI,EAAI6C,EAAYmO,EAC1B9O,EAAM6O,GAAS/Q,EAAGgR,EAAGrO,EAAM,EAAI,GAC/BR,EAAQ4O,GAAS/Q,EAAGgR,EAAGrO,GACvBP,EAAO2O,GAAS/Q,EAAGgR,EAAGrO,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKpL,KAAK0G,MAAY,IAAN0E,GAChBC,MAAOrL,KAAK0G,MAAc,IAAR2E,GAClBC,KAAMtL,KAAK0G,MAAa,IAAP4E,GACjBX,QAER,CEbgB+P,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACvH,EAAM2G,KACpB,MAAMa,EAAWJ,GAAOpH,GAClByH,EAASL,GAAOT,GACtB,IAAKa,IAAaC,EACd,OAAOV,GAAa/G,EAAM2G,GAE9B,MAAMe,EAAU,IAAKF,GACrB,OAAQjd,IACJmd,EAAQ1P,IAAMgP,GAAeQ,EAASxP,IAAKyP,EAAOzP,IAAKzN,GACvDmd,EAAQzP,MAAQ+O,GAAeQ,EAASvP,MAAOwP,EAAOxP,MAAO1N,GAC7Dmd,EAAQxP,KAAO8O,GAAeQ,EAAStP,KAAMuP,EAAOvP,KAAM3N,GAC1Dmd,EAAQnQ,MAAQmP,GAAUc,EAASjQ,MAAOkQ,EAAOlQ,MAAOhN,GACjDuN,GAAKH,UAAU+P,GACzB,ECpCCC,GAAmBA,CAACtf,EAAGC,IAAOiC,GAAMjC,EAAED,EAAEkC,IACxCqd,GAAO,mBAAAC,EAAA3d,UAAAzB,OAAIqf,EAAY,IAAA3W,MAAA0W,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA7d,UAAA6d,GAAA,OAAKD,EAAaE,OAAOL,GAAiB,ECRjEM,GAAkB,IAAI5gB,IAAI,CAAC,OAAQ,WCUzC,SAASqf,GAAUre,EAAGC,GAClB,OAAQwN,GAAMoS,GAAY7f,EAAGC,EAAGwN,EACpC,CACA,SAASqS,GAAS9f,GACd,MAAiB,kBAANA,EACAqe,GAEW,kBAANre,GACLsa,EAAAA,GAAAA,GAAmBta,GACpB0e,GACAlO,GAAMtC,KAAKlO,GACPkf,GACAa,GAELjX,MAAMC,QAAQ/I,GACZggB,GAEW,kBAANhgB,EACLwQ,GAAMtC,KAAKlO,GAAKkf,GAAWe,GAE/BvB,EACX,CACA,SAASsB,GAAShgB,EAAGC,GACjB,MAAM0R,EAAS,IAAI3R,GACbkgB,EAAYvO,EAAOvR,OACnB+f,EAAangB,EAAE6G,KAAI,CAAC3E,EAAG7B,IAAMyf,GAAS5d,EAAT4d,CAAY5d,EAAGjC,EAAEI,MACpD,OAAQoN,IACJ,IAAK,IAAIpN,EAAI,EAAGA,EAAI6f,EAAW7f,IAC3BsR,EAAOtR,GAAK8f,EAAW9f,GAAGoN,GAE9B,OAAOkE,CAAM,CAErB,CACA,SAASsO,GAAUjgB,EAAGC,GAClB,MAAM0R,EAAS,IAAK3R,KAAMC,GACpBkgB,EAAa,CAAC,EACpB,IAAK,MAAMrhB,KAAO6S,OACChT,IAAXqB,EAAElB,SAAiCH,IAAXsB,EAAEnB,KAC1BqhB,EAAWrhB,GAAOghB,GAAS9f,EAAElB,GAAXghB,CAAiB9f,EAAElB,GAAMmB,EAAEnB,KAGrD,OAAQoD,IACJ,IAAK,MAAMpD,KAAOqhB,EACdxO,EAAO7S,GAAOqhB,EAAWrhB,GAAKoD,GAElC,OAAOyP,CAAM,CAErB,CAaA,MAAMoO,GAAaA,CAAC7E,EAAQC,KACxB,MAAMiF,EAAWvO,GAAQL,kBAAkB2J,GACrCkF,EAAcxP,GAAoBqK,GAClCoF,EAAczP,GAAoBsK,GAIxC,OAHuBkF,EAAYpP,QAAQC,IAAI9Q,SAAWkgB,EAAYrP,QAAQC,IAAI9Q,QAC9EigB,EAAYpP,QAAQT,MAAMpQ,SAAWkgB,EAAYrP,QAAQT,MAAMpQ,QAC/DigB,EAAYpP,QAAQ5B,OAAOjP,QAAUkgB,EAAYrP,QAAQ5B,OAAOjP,OAE3Dwf,GAAgBrN,IAAI2I,KACpBoF,EAAYtP,OAAO5Q,QACnBwf,GAAgBrN,IAAI4I,KAChBkF,EAAYrP,OAAO5Q,OD3EpC,SAAuB8a,EAAQC,GAC3B,OAAIyE,GAAgBrN,IAAI2I,GACZzN,GAAOA,GAAK,EAAIyN,EAASC,EAGzB1N,GAAOA,GAAK,EAAI0N,EAASD,CAEzC,CCqEmBqF,CAAcrF,EAAQC,GAE1BoE,GAAKS,GA1BpB,SAAoB9E,EAAQC,GACxB,MAAMqF,EAAgB,GAChBC,EAAW,CAAEjQ,MAAO,EAAGU,IAAK,EAAG7B,OAAQ,GAC7C,IAAK,IAAIhP,EAAI,EAAGA,EAAI8a,EAAOnK,OAAO5Q,OAAQC,IAAK,CAC3C,MAAMsI,EAAOwS,EAAOhK,MAAM9Q,GACpBqgB,EAAcxF,EAAOjK,QAAQtI,GAAM8X,EAAS9X,IAC5CgY,EAAczF,EAAOlK,OAAO0P,IAAgB,EAClDF,EAAcngB,GAAKsgB,EACnBF,EAAS9X,IACb,CACA,OAAO6X,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAYtP,QAASoP,GAIzE1B,GAAaxD,EAAQC,EAChC,ECtFJ,SAAS0F,GAAIlJ,EAAM2G,EAAI7Q,GACnB,GAAoB,kBAATkK,GACO,kBAAP2G,GACM,kBAAN7Q,EACP,OAAO4Q,GAAU1G,EAAM2G,EAAI7Q,GAG/B,OADcqS,GAASnI,EAChBmJ,CAAMnJ,EAAM2G,EACvB,CCRA,SAASyC,GAAsBC,EAAc1U,EAAG9K,GAC5C,MAAMyf,EAAQ1c,KAAKmD,IAAI4E,EAFI,EAEwB,GACnD,OAAO9L,EAAkBgB,EAAUwf,EAAaC,GAAQ3U,EAAI2U,EAChE,CCNA,MAAMC,GAAiB,CAEnBC,UAAW,IACXC,QAAS,GACTC,KAAM,EACN5gB,SAAU,EAEVgH,SAAU,IACV6Z,OAAQ,GACRC,eAAgB,GAEhBC,UAAW,CACPC,SAAU,IACVC,QAAS,GAEbC,UAAW,CACPF,SAAU,KACVC,QAAS,IAGbE,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,GCnBVC,GAAU,KAChB,SAASC,GAAUtY,GAA0I,IACrJuY,EACAC,GAFY,SAAE1a,EAAWyZ,GAAezZ,SAAQ,OAAE6Z,EAASJ,GAAeI,OAAM,SAAE7gB,EAAWygB,GAAezgB,SAAQ,KAAE4gB,EAAOH,GAAeG,MAAO1X,EAGnItB,EAAsB6Y,GAAeW,aACzD,IAAIO,EAAe,EAAId,EAIvBc,GAAe7S,EAAAA,GAAAA,GAAM2R,GAAeY,WAAYZ,GAAea,WAAYK,GAC3E3a,GAAW8H,EAAAA,GAAAA,GAAM2R,GAAeU,YAAaV,GAAeW,YAAatZ,EAAsBd,IAC3F2a,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCne,EAAQqe,EAAmB7a,EAC3BzH,EAAIsiB,EAAmB7hB,EACvBR,EAAIsiB,GAAgBF,EAAcD,GAClCliB,EAAIqE,KAAKie,KAAKve,GACpB,OAAO+d,GAAWhiB,EAAIC,EAAKC,CAAC,EAEhCiiB,EAAcE,IACV,MACMpe,EADmBoe,EAAeD,EACP3a,EAC3BmC,EAAI3F,EAAQxD,EAAWA,EACvBgJ,EAAIlF,KAAKsJ,IAAIuU,EAAc,GAAK7d,KAAKsJ,IAAIwU,EAAc,GAAK5a,EAC5Dgb,EAAIle,KAAKie,KAAKve,GACdgM,EAAIsS,GAAgBhe,KAAKsJ,IAAIwU,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBL,GAAU,GAAK,EAAI,KACzCpY,EAAIH,GAAKgZ,GAAMxS,CAAC,IAOvCiS,EAAYG,GACE9d,KAAKie,KAAKH,EAAe5a,KACxB4a,EAAe5hB,GAAYgH,EAAW,GAC1C,KAEX0a,EAAcE,GACA9d,KAAKie,KAAKH,EAAe5a,IACIA,EAAWA,GAAvChH,EAAW4hB,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAIvc,EAASuc,EACb,IAAK,IAAIriB,EAAI,EAAGA,EAAIsiB,GAAgBtiB,IAChC8F,GAAkB+b,EAAS/b,GAAUgc,EAAWhc,GAEpD,OAAOA,CACX,CAzByByc,CAAgBV,EAAUC,EAD1B,EAAI1a,GAGzB,GADAA,EAAWY,EAAsBZ,GAC7B3E,MAAMuf,GACN,MAAO,CACHlB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxB3Z,YAGH,CACD,MAAM0Z,EAAY5c,KAAKsJ,IAAIwU,EAAc,GAAKhB,EAC9C,MAAO,CACHF,YACAC,QAAwB,EAAfgB,EAAmB7d,KAAKqQ,KAAKyM,EAAOF,GAC7C1Z,WAER,CACJ,CACA,MAAMkb,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAe9d,KAAKqQ,KAAK,EAAIwN,EAAeA,EACvD,CC3EA,MAAMS,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAanhB,EAASohB,GAC3B,OAAOA,EAAKC,MAAMnkB,QAAyBH,IAAjBiD,EAAQ9C,IACtC,CAuCA,SAASokB,KAAgG,IAAzFC,EAAuBthB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAGqf,GAAeK,eAAgBD,EAAMzf,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAGqf,GAAeI,OAC7F,MAAM1f,EAA6C,kBAA5BuhB,EACjB,CACE5B,eAAgB4B,EAChB3X,UAAW,CAAC,EAAG,GACf8V,UAEF6B,EACN,IAAI,UAAE3B,EAAS,UAAEG,GAAc/f,EAC/B,MAAMsZ,EAAStZ,EAAQ4J,UAAU,GAC3B2P,EAASvZ,EAAQ4J,UAAU5J,EAAQ4J,UAAUpL,OAAS,GAKtD6d,EAAQ,CAAEE,MAAM,EAAOtb,MAAOqY,IAC9B,UAAEiG,EAAS,QAAEC,EAAO,KAAEC,EAAI,SAAE5Z,EAAQ,SAAEhH,EAAQ,uBAAE2iB,GAtD1D,SAA0BxhB,GACtB,IAAIyhB,EAAgB,CAChB5iB,SAAUygB,GAAezgB,SACzB0gB,UAAWD,GAAeC,UAC1BC,QAASF,GAAeE,QACxBC,KAAMH,GAAeG,KACrB+B,wBAAwB,KACrBxhB,GAGP,IAAKmhB,GAAanhB,EAASkhB,KACvBC,GAAanhB,EAASihB,IACtB,GAAIjhB,EAAQ2f,eAAgB,CACxB,MAAMA,EAAiB3f,EAAQ2f,eACzB+B,EAAQ,EAAI/e,KAAKoP,IAAwB,IAAjB4N,GACxBJ,EAAYmC,EAAOA,EACnBlC,EAAU,GACZ7R,EAAAA,GAAAA,GAAM,IAAM,EAAG,GAAK3N,EAAQ0f,QAAU,IACtC/c,KAAKqQ,KAAKuM,GACdkC,EAAgB,IACTA,EACHhC,KAAMH,GAAeG,KACrBF,YACAC,UAER,KACK,CACD,MAAMmC,EAAUtB,GAAWrgB,GAC3ByhB,EAAgB,IACTA,KACAE,EACHlC,KAAMH,GAAeG,MAEzBgC,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFG,CAAiB,IAC5F5hB,EACHnB,UAAW8H,EAAsB3G,EAAQnB,UAAY,KAEnDgjB,EAAkBhjB,GAAY,EAC9B2hB,EAAehB,GAAW,EAAI7c,KAAKqQ,KAAKuM,EAAYE,IACpDqC,EAAevI,EAASD,EACxByI,EAAsBpb,EAAsBhE,KAAKqQ,KAAKuM,EAAYE,IAQlEuC,EAAkBrf,KAAK+I,IAAIoW,GAAgB,EAOjD,IAAIG,EACJ,GAPArC,IAAcA,EAAYoC,EACpB1C,GAAeM,UAAUC,SACzBP,GAAeM,UAAUE,SAC/BC,IAAcA,EAAYiC,EACpB1C,GAAeS,UAAUF,SACzBP,GAAeS,UAAUD,SAE3BU,EAAe,EAAG,CAClB,MAAM0B,EAAcvB,GAAgBoB,EAAqBvB,GAEzDyB,EAAiBvX,IACb,MAAM4V,EAAW3d,KAAKie,KAAKJ,EAAeuB,EAAsBrX,GAChE,OAAQ6O,EACJ+G,IACOuB,EACCrB,EAAeuB,EAAsBD,GACrCI,EACAvf,KAAKuJ,IAAIgW,EAAcxX,GACvBoX,EAAenf,KAAKwf,IAAID,EAAcxX,GAAG,CAE7D,MACK,GAAqB,IAAjB8V,EAELyB,EAAiBvX,GAAM6O,EACnB5W,KAAKie,KAAKmB,EAAsBrX,IAC3BoX,GACID,EAAkBE,EAAsBD,GAAgBpX,OAEpE,CAED,MAAM0X,EAAoBL,EAAsBpf,KAAKqQ,KAAKwN,EAAeA,EAAe,GACxFyB,EAAiBvX,IACb,MAAM4V,EAAW3d,KAAKie,KAAKJ,EAAeuB,EAAsBrX,GAE1D2X,EAAW1f,KAAKC,IAAIwf,EAAoB1X,EAAG,KACjD,OAAQ6O,EACH+G,IACKuB,EACErB,EAAeuB,EAAsBD,GACrCnf,KAAK2f,KAAKD,GACVD,EACIN,EACAnf,KAAK4f,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAMhG,EAAY,CACdoG,mBAAoBhB,GAAyB3b,GAAmB,KAChEyW,KAAO5R,IACH,MAAM9K,EAAUqiB,EAAcvX,GAC9B,GAAK8W,EAmBDnF,EAAME,KAAO7R,GAAK7E,MAnBO,CACzB,IAAI4c,EAAkB,EAMlBjC,EAAe,IACfiC,EACU,IAAN/X,EACMjE,EAAsBob,GACtB1C,GAAsB8C,EAAevX,EAAG9K,IAEtD,MAAM8iB,EAA2B/f,KAAK+I,IAAI+W,IAAoB7C,EACxD+C,EAA+BhgB,KAAK+I,IAAI6N,EAAS3Z,IAAYmgB,EACnE1D,EAAME,KACFmG,GAA4BC,CACpC,CAKA,OADAtG,EAAMpb,MAAQob,EAAME,KAAOhD,EAAS3Z,EAC7Byc,CAAK,EAEhBlN,SAAUA,KACN,MAAMqT,EAAqB7f,KAAKC,IAAIuZ,GAAsBC,GAAYF,IAChEjV,EAASgC,GAAsB0T,GAAaP,EAAUE,KAAKkG,EAAqB7F,GAAU1b,OAAOuhB,EAAoB,IAC3H,OAAOA,EAAqB,MAAQvb,CAAM,EAE9C2b,aAAcA,QAElB,OAAOxG,CACX,CCjKA,SAASyG,GAAO9a,GAAiK,IAAhK,UAAE6B,EAAS,SAAE/K,EAAW,EAAG,MAAEikB,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEtgB,EAAG,IAAEkD,EAAG,UAAEia,EAAY,GAAG,UAAEH,GAAY7X,EAC3K,MAAMuR,EAAS1P,EAAU,GACnByS,EAAQ,CACVE,MAAM,EACNtb,MAAOqY,GAGL6J,EAAmB7iB,QACTvD,IAAR6F,EACOkD,OACC/I,IAAR+I,GAEGnD,KAAK+I,IAAI9I,EAAMtC,GAAKqC,KAAK+I,IAAI5F,EAAMxF,GAD/BsC,EAC0CkD,EAEzD,IAAIsd,EAAYN,EAAQjkB,EACxB,MAAMwkB,EAAQ/J,EAAS8J,EACjB7J,OAA0Bxc,IAAjBmmB,EAA6BG,EAAQH,EAAaG,GAK7D9J,IAAW8J,IACXD,EAAY7J,EAASD,GACzB,MAAMgK,EAAa5Y,IAAO0Y,EAAYzgB,KAAKie,KAAKlW,EAAIqY,GAC9CQ,EAAc7Y,GAAM6O,EAAS+J,EAAU5Y,GACvC8Y,EAAiB9Y,IACnB,MAAMrI,EAAQihB,EAAU5Y,GAClB+Y,EAASF,EAAW7Y,GAC1B2R,EAAME,KAAO5Z,KAAK+I,IAAIrJ,IAAU0d,EAChC1D,EAAMpb,MAAQob,EAAME,KAAOhD,EAASkK,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsBlZ,IAjCLpK,SAkCA+b,EAAMpb,WAlCSlE,IAAR6F,GAAqBtC,EAAIsC,QAAiB7F,IAAR+I,GAAqBxF,EAAIwF,KAoCrF4d,EAAsBhZ,EACtBiZ,EAAWrC,GAAO,CACd1X,UAAW,CAACyS,EAAMpb,MAAOkiB,EAAgB9G,EAAMpb,QAC/CpC,SAAUsgB,GAAsBoE,EAAY7Y,EAAG2R,EAAMpb,OACrDue,QAASwD,EACTzD,UAAW0D,EACXlD,YACAH,cACF,EAGN,OADAgE,EAAmB,GACZ,CACHpB,mBAAoB,KACpBlG,KAAO5R,IAOH,IAAImZ,GAAkB,EAUtB,OATKF,QAAoC5mB,IAAxB2mB,IACbG,GAAkB,EAClBL,EAAc9Y,GACdkZ,EAAmBlZ,SAMK3N,IAAxB2mB,GAAqChZ,GAAKgZ,EACnCC,EAASrH,KAAK5R,EAAIgZ,KAGxBG,GAAmBL,EAAc9Y,GAC3B2R,EACX,EAGZ,CDiFAiF,GAAOwC,eAAkB9jB,IACrB,MAAM+jB,EEhKV,SAA+B/jB,GAAuC,IAA9B0S,EAAKzS,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,IAC5C,MAAMmc,GAD0Dnc,UAAAzB,OAAA,EAAAyB,UAAA,QAAAlD,GAC9B,IAAKiD,EAAS4J,UAAW,CAAC,EAAG8I,KACzD7M,EAAWlD,KAAKC,IAAIuZ,GAAsBC,GAAYF,IAC5D,MAAO,CACHnV,KAAM,YACNoB,KAAOwU,GACIP,EAAUE,KAAKzW,EAAW8W,GAAU1b,MAAQyR,EAEvD7M,SAAUc,EAAsBd,GAExC,CFsJ6Bme,CAAsBhkB,EAAS,IAAKshB,IAI7D,OAHAthB,EAAQmI,KAAOX,IAAyBuc,EAAiB5b,KAAO,UAChEnI,EAAQ6F,SAAWY,EAAsBsd,EAAiBle,UAC1D7F,EAAQ+G,KAAO,YACR/G,CAAO,EGxKlB,MAAMoI,GAAuByC,EAAY,IAAM,EAAG,EAAG,GAC/CxC,GAAwBwC,EAAY,EAAG,EAAG,IAAM,GAChDvC,GAA0BuC,EAAY,IAAM,EAAG,IAAM,GCIrDoZ,GAAe,CACjB/b,OAAQgD,EAAAA,EACR9C,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN6D,UAAS,GACT5D,QAAO,GACPC,OAAM,EACNsD,UAAS,EACTrD,QAAO,EACPsD,WAAUA,IAERkY,GAA8BxnB,IAChC,GAAIsK,EAAmBtK,GAAa,CAEtBA,EAAW8B,OACrB,MAAO2lB,EAAIC,EAAIC,EAAIC,GAAM5nB,EACzB,OAAOmO,EAAYsZ,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAf5nB,EAGLunB,GAAavnB,GAEjBA,CAAU,ECpBfigB,GAAWA,CAAC5G,EAAM2G,EAAIzb,KACxB,MAAMsjB,EAAmB7H,EAAK3G,EAC9B,OAA4B,IAArBwO,EAAyB,GAAKtjB,EAAQ8U,GAAQwO,CAAgB,ECuBzE,SAASC,GAAYC,EAAO1U,GAAqD,IAA3CpC,MAAO+W,GAAU,EAAI,KAAEvc,EAAI,MAAE+W,GAAOjf,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAM0kB,EAAcF,EAAMjmB,OAM1B,GAL0BuR,EAAOvR,OAKb,IAAhBmmB,EACA,MAAO,IAAM5U,EAAO,GACxB,GAAoB,IAAhB4U,GAAqB5U,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAM6U,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnB9U,EAAS,IAAIA,GAAQ8U,WAEzB,MAAMC,EAlDV,SAAsB/U,EAAQ5H,EAAM4c,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAe9F,GAC9BgG,EAAYlV,EAAOvR,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIwmB,EAAWxmB,IAAK,CAChC,IAAIygB,EAAQ8F,EAAajV,EAAOtR,GAAIsR,EAAOtR,EAAI,IAC/C,GAAI0J,EAAM,CACN,MAAM+c,EAAiBhe,MAAMC,QAAQgB,GAAQA,EAAK1J,IAAMyM,EAAAA,EAAO/C,EAC/D+W,EAAQvB,GAAKuH,EAAgBhG,EACjC,CACA4F,EAAO/mB,KAAKmhB,EAChB,CACA,OAAO4F,CACX,CAqCmBK,CAAapV,EAAQ5H,EAAM+W,GACpC+F,EAAYH,EAAOtmB,OACnB4mB,EAAgB9kB,IAClB,GAAIskB,GAAoBtkB,EAAImkB,EAAM,GAC9B,OAAO1U,EAAO,GAClB,IAAItR,EAAI,EACR,GAAIwmB,EAAY,EACZ,KAAOxmB,EAAIgmB,EAAMjmB,OAAS,KAClB8B,EAAImkB,EAAMhmB,EAAI,IADOA,KAKjC,MAAM4mB,EAAkB1I,GAAS8H,EAAMhmB,GAAIgmB,EAAMhmB,EAAI,GAAI6B,GACzD,OAAOwkB,EAAOrmB,GAAG4mB,EAAgB,EAErC,OAAOX,EACApkB,GAAM8kB,GAAazX,EAAAA,GAAAA,GAAM8W,EAAM,GAAIA,EAAME,EAAc,GAAIrkB,IAC5D8kB,CACV,CCvEA,SAASE,GAAc1nB,GACnB,MAAMuM,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQob,GACxB,MAAM3iB,EAAMuH,EAAOA,EAAO3L,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAK8mB,EAAW9mB,IAAK,CACjC,MAAM+mB,EAAiB7I,GAAS,EAAG4I,EAAW9mB,GAC9C0L,EAAOpM,KAAK0e,GAAU7Z,EAAK,EAAG4iB,GAClC,CACJ,CDLIC,CAAWtb,EAAQvM,EAAIY,OAAS,GACzB2L,CACX,CEIA,SAASP,GAAS7B,GAA4E,IAA3E,SAAElC,EAAW,IAAK+D,UAAW8b,EAAc,MAAE1b,EAAK,KAAE7B,EAAO,aAAcJ,EAKxF,MAAM4d,ECfaxd,IACZjB,MAAMC,QAAQgB,IAA4B,kBAAZA,EAAK,GDclByd,CAAczd,GAChCA,EAAKlD,IAAIif,IACTA,GAA2B/b,GAK3BkU,EAAQ,CACVE,MAAM,EACNtb,MAAOykB,EAAe,IAKpBG,EE7BV,SAA8B1b,EAAQtE,GAClC,OAAOsE,EAAOlF,KAAK6gB,GAAMA,EAAIjgB,GACjC,CF2B0BkgB,CAGtB/b,GAASA,EAAMxL,SAAWknB,EAAelnB,OACnCwL,EACAsb,GAAcI,GAAiB7f,GAC/BmgB,EAAoBxB,GAAYqB,EAAeH,EAAgB,CACjEvd,KAAMjB,MAAMC,QAAQwe,GACdA,GA9BSvW,EA+BKsW,EA/BGze,EA+Ba0e,EA9BjCvW,EAAOnK,KAAI,IAAMgC,GAAUqB,KAAWrK,OAAO,EAAGmR,EAAO5Q,OAAS,MAD3E,IAAuB4Q,EAAQnI,EAiC3B,MAAO,CACHub,mBAAoB3c,EACpByW,KAAO5R,IACH2R,EAAMpb,MAAQ+kB,EAAkBtb,GAChC2R,EAAME,KAAO7R,GAAK7E,EACXwW,GAGnB,CG9CA,MAAM4J,GAAmBC,IACrB,MAAMC,EAAgBpe,IAAA,IAAC,UAAExI,GAAWwI,EAAA,OAAKme,EAAO3mB,EAAU,EAC1D,MAAO,CACHsD,MAAOA,IAAMjB,EAAAA,GAAMskB,OAAOC,GAAe,GACzCrkB,KAAMA,KAAMskB,EAAAA,EAAAA,IAAYD,GAKxBpnB,IAAKA,IAAOI,EAAAA,GAAUC,aAAeD,EAAAA,GAAUI,UAAYN,EAAKF,MACnE,ECCCsnB,GAAa,CACfC,MAAOzD,GACPA,QAAO,GACP0D,MAAO3c,GACPA,UAAWA,GACX0X,OAAMA,IAEJkF,GAAqB7X,GAAYA,EAAU,IAMjD,MAAM8X,WAA4B1L,GAC9Bxd,WAAAA,CAAYyC,GACRmZ,MAAMnZ,GAINxC,KAAKkpB,SAAW,KAIhBlpB,KAAKmpB,WAAa,KAIlBnpB,KAAKgD,YAAc,EAInBhD,KAAKopB,cAAgB,EAMrBppB,KAAKqpB,iBAAmB,UAIxBrpB,KAAKoI,UAAY,KACjBpI,KAAK6e,MAAQ,OAKb7e,KAAKsE,KAAO,KAGR,GAFAtE,KAAKwY,SAAStQ,SACdlI,KAAK0d,WAAY,EACE,SAAf1d,KAAK6e,MACL,OACJ7e,KAAKspB,WACL,MAAM,OAAEC,GAAWvpB,KAAKwC,QACxB+mB,GAAUA,GAAQ,EAEtB,MAAM,KAAExW,EAAI,YAAE9M,EAAW,QAAEiG,EAAO,UAAEE,GAAcpM,KAAKwC,QACjDgnB,EAAqBtd,GAASoN,kBAAoBA,GAExDtZ,KAAKwY,SAAW,IAAIgR,EAAmBpd,GADpBqd,CAACnM,EAAmBxD,IAAkB9Z,KAAKie,oBAAoBX,EAAmBxD,IACvC/G,EAAM9M,EAAaiG,GACjFlM,KAAKwY,SAASmB,iBAClB,CACAlR,OAAAA,GACIkT,MAAMlT,UAEFzI,KAAKge,WACL1O,OAAOoa,OAAO1pB,KAAKge,UAAWhe,KAAKqe,aAAare,KAAKge,UAAU5R,WAEvE,CACAiS,YAAAA,CAAasL,GACT,MAAM,KAAEpgB,EAAO,YAAW,OAAE+C,EAAS,EAAC,YAAEmR,EAAc,EAAC,WAAElR,EAAU,SAAElL,EAAW,GAAOrB,KAAKwC,QACtFonB,EAAmBtgB,EAAYC,GAC/BA,EACAsf,GAAWtf,IAAS6C,GAO1B,IAAIyd,EACAC,EAKAF,IAAqBxd,IACK,kBAAnBud,EAAY,KACnBE,EAAwB1J,GAAK6I,GAAmBvH,GAAIkI,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAM/K,EAAYgL,EAAiB,IAAK5pB,KAAKwC,QAAS4J,UAAWud,IAK9C,WAAfpd,IACAud,EAAoBF,EAAiB,IAC9B5pB,KAAKwC,QACR4J,UAAW,IAAIud,GAAatC,UAC5BhmB,UAAWA,KAWkB,OAAjCud,EAAUoG,qBACVpG,EAAUoG,mBAAqBrG,GAAsBC,IAEzD,MAAM,mBAAEoG,GAAuBpG,EACzBmL,EAAmB/E,EAAqBvH,EAE9C,MAAO,CACHmB,YACAkL,oBACAD,wBACA7E,qBACA+E,mBACAC,cAPkBD,GAAoBzd,EAAS,GAAKmR,EAS5D,CACAa,cAAAA,GACI,MAAM,SAAEd,GAAW,GAASxd,KAAKwC,QACjC6I,EAAiBE,aACjBvL,KAAK0I,OACyB,WAA1B1I,KAAKqpB,kBAAkC7L,EAIvCxd,KAAK6e,MAAQ7e,KAAKqpB,iBAHlBrpB,KAAK2I,OAKb,CACAshB,IAAAA,CAAKloB,GAA2B,IAAhBmoB,EAAMznB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,IAAAA,UAAA,GAClB,MAAM,SAAEqY,GAAa9a,KAErB,IAAK8a,EAAU,CACX,MAAM,UAAE1O,GAAcpM,KAAKwC,QAC3B,MAAO,CAAEuc,MAAM,EAAMtb,MAAO2I,EAAUA,EAAUpL,OAAS,GAC7D,CACA,MAAM,cAAE8Y,EAAa,UAAE8E,EAAS,kBAAEkL,EAAiB,sBAAED,EAAqB,UAAEzd,EAAS,mBAAE4Y,EAAkB,cAAEgF,EAAa,iBAAED,GAAsBjP,EAChJ,GAAuB,OAAnB9a,KAAKoI,UACL,OAAOwW,EAAUE,KAAK,GAC1B,MAAM,MAAEzS,EAAK,OAAEC,EAAM,WAAEC,EAAU,YAAEkR,EAAW,SAAES,GAAale,KAAKwC,QAO9DxC,KAAKmI,MAAQ,EACbnI,KAAKoI,UAAYjD,KAAKC,IAAIpF,KAAKoI,UAAWrG,GAErC/B,KAAKmI,MAAQ,IAClBnI,KAAKoI,UAAYjD,KAAKC,IAAIrD,EAAYioB,EAAgBhqB,KAAKmI,MAAOnI,KAAKoI,YAGvE8hB,EACAlqB,KAAKgD,YAAcjB,EAEI,OAAlB/B,KAAKkpB,SACVlpB,KAAKgD,YAAchD,KAAKkpB,SAMxBlpB,KAAKgD,YACDmC,KAAK0G,MAAM9J,EAAY/B,KAAKoI,WAAapI,KAAKmI,MAGtD,MAAMgiB,EAAmBnqB,KAAKgD,YAAcqJ,GAASrM,KAAKmI,OAAS,EAAI,GAAK,GACtEiiB,EAAiBpqB,KAAKmI,OAAS,EAC/BgiB,EAAmB,EACnBA,EAAmBH,EACzBhqB,KAAKgD,YAAcmC,KAAKmD,IAAI6hB,EAAkB,GAE3B,aAAfnqB,KAAK6e,OAA0C,OAAlB7e,KAAKkpB,WAClClpB,KAAKgD,YAAcgnB,GAEvB,IAAIK,EAAUrqB,KAAKgD,YACfsnB,EAAiB1L,EACrB,GAAItS,EAAQ,CAMR,MAAM6S,EAAWha,KAAKC,IAAIpF,KAAKgD,YAAagnB,GAAiBD,EAK7D,IAAIQ,EAAmBplB,KAAKqlB,MAAMrL,GAK9BsL,EAAoBtL,EAAW,GAK9BsL,GAAqBtL,GAAY,IAClCsL,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBplB,KAAKC,IAAImlB,EAAkBje,EAAS,GAIhC9F,QAAQ+jB,EAAmB,KAE3B,YAAfhe,GACAke,EAAoB,EAAIA,EACpBhN,IACAgN,GAAqBhN,EAAcsM,IAGnB,WAAfxd,IACL+d,EAAiBR,IAGzBO,GAAUla,EAAAA,GAAAA,GAAM,EAAG,EAAGsa,GAAqBV,CAC/C,CAMA,MAAMlL,EAAQuL,EACR,CAAErL,MAAM,EAAOtb,MAAO2I,EAAU,IAChCke,EAAexL,KAAKuL,GACtBR,IACAhL,EAAMpb,MAAQomB,EAAsBhL,EAAMpb,QAE9C,IAAI,KAAEsb,GAASF,EACVuL,GAAyC,OAAvBpF,IACnBjG,EACI/e,KAAKmI,OAAS,EACRnI,KAAKgD,aAAegnB,EACpBhqB,KAAKgD,aAAe,GAElC,MAAM0nB,EAAwC,OAAlB1qB,KAAKkpB,WACb,aAAflpB,KAAK6e,OAAwC,YAAf7e,KAAK6e,OAAuBE,GAU/D,OATI2L,QAAyCnrB,IAAlBua,IACvB+E,EAAMpb,MAAQ4Z,GAAiBjR,EAAWpM,KAAKwC,QAASsX,IAExDoE,GACAA,EAASW,EAAMpb,OAEfinB,GACA1qB,KAAK2qB,SAEF9L,CACX,CACA,YAAIxW,GACA,MAAM,SAAEyS,GAAa9a,KACrB,OAAO8a,EAAW3R,EAAsB2R,EAASkK,oBAAsB,CAC3E,CACA,QAAIvjB,GACA,OAAO0H,EAAsBnJ,KAAKgD,YACtC,CACA,QAAIvB,CAAKQ,GACLA,EAAUgH,EAAsBhH,GAChCjC,KAAKgD,YAAcf,EACG,OAAlBjC,KAAKkpB,UAAoC,IAAflpB,KAAKmI,MAC/BnI,KAAKkpB,SAAWjnB,EAEXjC,KAAK4qB,SACV5qB,KAAKoI,UAAYpI,KAAK4qB,OAAOrpB,MAAQU,EAAUjC,KAAKmI,MAE5D,CACA,SAAIA,GACA,OAAOnI,KAAKopB,aAChB,CACA,SAAIjhB,CAAM0iB,GACN,MAAMC,EAAa9qB,KAAKopB,gBAAkByB,EAC1C7qB,KAAKopB,cAAgByB,EACjBC,IACA9qB,KAAKyB,KAAO0H,EAAsBnJ,KAAKgD,aAE/C,CACA0F,IAAAA,GAII,GAHK1I,KAAKwY,SAASL,aACfnY,KAAKwY,SAAS4B,UAEbpa,KAAKge,UAEN,YADAhe,KAAKqpB,iBAAmB,WAG5B,GAAIrpB,KAAK0d,UACL,OACJ,MAAM,OAAEkN,EAASnC,GAAe,OAAEsC,EAAM,UAAE3iB,GAAcpI,KAAKwC,QACxDxC,KAAK4qB,SACN5qB,KAAK4qB,OAASA,GAAQ7oB,GAAc/B,KAAKiqB,KAAKloB,MAElDgpB,GAAUA,IACV,MAAMxpB,EAAMvB,KAAK4qB,OAAOrpB,MACF,OAAlBvB,KAAKkpB,SACLlpB,KAAKoI,UAAY7G,EAAMvB,KAAKkpB,SAEtBlpB,KAAKoI,UAGS,aAAfpI,KAAK6e,QACV7e,KAAKoI,UAAY7G,GAHjBvB,KAAKoI,UAAYA,GAAapI,KAAK8d,gBAKpB,aAAf9d,KAAK6e,OACL7e,KAAK6d,wBAET7d,KAAKmpB,WAAanpB,KAAKoI,UACvBpI,KAAKkpB,SAAW,KAKhBlpB,KAAK6e,MAAQ,UACb7e,KAAK4qB,OAAOvlB,OAChB,CACAsD,KAAAA,GACS3I,KAAKge,WAIVhe,KAAK6e,MAAQ,SACb7e,KAAKkpB,SAAWlpB,KAAKgD,aAAe,GAJhChD,KAAKqpB,iBAAmB,QAKhC,CACAzgB,QAAAA,GACuB,YAAf5I,KAAK6e,OACL7e,KAAK0I,OAET1I,KAAKqpB,iBAAmBrpB,KAAK6e,MAAQ,WACrC7e,KAAKkpB,SAAW,IACpB,CACAyB,MAAAA,GACI3qB,KAAKspB,WACLtpB,KAAK6e,MAAQ,WACb,MAAM,WAAErF,GAAexZ,KAAKwC,QAC5BgX,GAAcA,GAClB,CACAtR,MAAAA,GAC4B,OAApBlI,KAAKmpB,YACLnpB,KAAKiqB,KAAKjqB,KAAKmpB,YAEnBnpB,KAAKspB,WACLtpB,KAAK6d,uBACT,CACAyL,QAAAA,GACItpB,KAAK6e,MAAQ,OACb7e,KAAKgrB,aACLhrB,KAAKme,yBACLne,KAAK6d,wBACL7d,KAAKoI,UAAYpI,KAAKmpB,WAAa,KACnCnpB,KAAKwY,SAAStQ,SACdmD,EAAiBE,YACrB,CACAyf,UAAAA,GACShrB,KAAK4qB,SAEV5qB,KAAK4qB,OAAOtmB,OACZtE,KAAK4qB,YAASrrB,EAClB,CACA2qB,MAAAA,CAAOzoB,GAEH,OADAzB,KAAKoI,UAAY,EACVpI,KAAKiqB,KAAKxoB,GAAM,EAC3B,CACA,YAAI8F,GACA,OAAOvH,KAAKwe,sBAChB,EC/XJ,MAAMyM,GAAoB,IAAIrrB,IAAI,CAC9B,UACA,WACA,SACA,cCLEsrB,GAA8BpkB,GAAK,IAAMwI,OAAOE,eAAeC,KAAK0b,QAAQ5b,UAAW,aC+D7F,MAAM6b,GAA6B,CAC/B5c,WAAU,GACVD,UAAS,EACTK,UAASA,IAKb,MAAMyc,WAA6B9N,GAC/Bxd,WAAAA,CAAYyC,GACRmZ,MAAMnZ,GACN,MAAM,KAAEuQ,EAAI,YAAE9M,EAAW,QAAEiG,EAAO,UAAEE,GAAcpM,KAAKwC,QACvDxC,KAAKwY,SAAW,IAAIkD,GAAqBtP,GAAW,CAACkR,EAAmBxD,IAAkB9Z,KAAKie,oBAAoBX,EAAmBxD,IAAgB/G,EAAM9M,EAAaiG,GACzKlM,KAAKwY,SAASmB,iBAClB,CACA0E,YAAAA,CAAajS,EAAW0N,GACpB,IAAI,SAAEzR,EAAW,IAAG,MAAEmE,EAAK,KAAE7B,EAAI,KAAEpB,EAAI,YAAEtD,EAAW,KAAE8M,EAAI,UAAE3K,GAAepI,KAAKwC,QAKhF,IAAKyD,EAAYzC,QAAUyC,EAAYzC,MAAMpB,QACzC,OAAO,EAjBnB,IA1CuCI,EA0E/B,GARoB,kBAATmI,GACPX,KACkBW,KAzBZygB,KA0BNzgB,EAAOygB,GAA2BzgB,IApElCrB,GAD2B9G,EA0EGxC,KAAKwC,SAzEf+G,OACP,WAAjB/G,EAAQ+G,OACP4B,EAAuB3I,EAAQmI,MAuEiB,CAC7C,MAAM,WAAE6O,EAAU,SAAE0E,EAAQ,YAAEjY,EAAW,QAAEiG,KAAY1J,GAAYxC,KAAKwC,QAClE8oB,EAvElB,SAA8Blf,EAAW5J,GAMrC,MAAM+oB,EAAkB,IAAItC,GAAoB,IACzCzmB,EACH4J,YACAE,OAAQ,EACRD,MAAO,EACP/C,aAAa,IAEjB,IAAIuV,EAAQ,CAAEE,MAAM,EAAOtb,MAAO2I,EAAU,IAC5C,MAAMof,EAAwB,GAK9B,IAAIte,EAAI,EACR,MAAQ2R,EAAME,MAAQ7R,EA/BN,KAgCZ2R,EAAQ0M,EAAgBrB,OAAOhd,GAC/Bse,EAAsBjrB,KAAKse,EAAMpb,OACjCyJ,GAvCY,GAyChB,MAAO,CACHV,WAAOjN,EACP6M,UAAWof,EACXnjB,SAAU6E,EA5CE,GA6CZvC,KAAM,SAEd,CAwC0C8gB,CAAqBrf,EAAW5J,GAKrC,KAJzB4J,EAAYkf,EAAsBlf,WAIpBpL,SACVoL,EAAU,GAAKA,EAAU,IAE7B/D,EAAWijB,EAAsBjjB,SACjCmE,EAAQ8e,EAAsB9e,MAC9B7B,EAAO2gB,EAAsB3gB,KAC7BpB,EAAO,WACX,CACA,MAAM9D,EAAYwG,EAAoBhG,EAAYzC,MAAMpB,QAAS2Q,EAAM3G,EAAW,IAAKpM,KAAKwC,QAAS6F,WAAUmE,QAAO7B,SAyBtH,OAtBAlF,EAAU2C,UAAYA,GAAapI,KAAK8d,gBACpC9d,KAAK0rB,iBACL5jB,EAAerC,EAAWzF,KAAK0rB,iBAC/B1rB,KAAK0rB,qBAAkBnsB,GAWvBkG,EAAUuH,SAAW,KACjB,MAAM,WAAEwM,GAAexZ,KAAKwC,QAC5ByD,EAAYvE,IAAI2b,GAAiBjR,EAAWpM,KAAKwC,QAASsX,IAC1DN,GAAcA,IACdxZ,KAAKkI,SACLlI,KAAKme,wBAAwB,EAG9B,CACH1Y,YACA4C,WACAmE,QACAjD,OACAoB,OACAyB,UAAWA,EAEnB,CACA,YAAI/D,GACA,MAAM,SAAEyS,GAAa9a,KACrB,IAAK8a,EACD,OAAO,EACX,MAAM,SAAEzS,GAAayS,EACrB,OAAO3R,EAAsBd,EACjC,CACA,QAAI5G,GACA,MAAM,SAAEqZ,GAAa9a,KACrB,IAAK8a,EACD,OAAO,EACX,MAAM,UAAErV,GAAcqV,EACtB,OAAO3R,EAAsB1D,EAAUzC,aAAe,EAC1D,CACA,QAAIvB,CAAKQ,GACL,MAAM,SAAE6Y,GAAa9a,KACrB,IAAK8a,EACD,OACJ,MAAM,UAAErV,GAAcqV,EACtBrV,EAAUzC,YAAciG,EAAsBhH,EAClD,CACA,SAAIkG,GACA,MAAM,SAAE2S,GAAa9a,KACrB,IAAK8a,EACD,OAAO,EACX,MAAM,UAAErV,GAAcqV,EACtB,OAAOrV,EAAUkmB,YACrB,CACA,YAAIpkB,GACA,OAAOvH,KAAK8a,SAASrV,UAAU8B,QACnC,CACA,SAAIY,CAAM0iB,GACN,MAAM,SAAE/P,GAAa9a,KACrB,IAAK8a,EACD,OACJ,MAAM,UAAErV,GAAcqV,EACtBrV,EAAUkmB,aAAed,CAC7B,CACA,SAAIhM,GACA,MAAM,SAAE/D,GAAa9a,KACrB,IAAK8a,EACD,MAAO,OACX,MAAM,UAAErV,GAAcqV,EACtB,OAAOrV,EAAUmmB,SACrB,CACA,aAAIxjB,GACA,MAAM,SAAE0S,GAAa9a,KACrB,IAAK8a,EACD,OAAO,KACX,MAAM,UAAErV,GAAcqV,EAGtB,OAAOrV,EAAU2C,SACrB,CAKAN,cAAAA,CAAeC,GACX,GAAK/H,KAAKge,UAGL,CACD,MAAM,SAAElD,GAAa9a,KACrB,IAAK8a,EACD,OAAOpN,EAAAA,EACX,MAAM,UAAEjI,GAAcqV,EACtBhT,EAAerC,EAAWsC,EAC9B,MARI/H,KAAK0rB,gBAAkB3jB,EAS3B,OAAO2F,EAAAA,CACX,CACAhF,IAAAA,GACI,GAAI1I,KAAK0d,UACL,OACJ,MAAM,SAAE5C,GAAa9a,KACrB,IAAK8a,EACD,OACJ,MAAM,UAAErV,GAAcqV,EACM,aAAxBrV,EAAUmmB,WACV5rB,KAAK6d,wBAETpY,EAAUiD,MACd,CACAC,KAAAA,GACI,MAAM,SAAEmS,GAAa9a,KACrB,IAAK8a,EACD,OACJ,MAAM,UAAErV,GAAcqV,EACtBrV,EAAUkD,OACd,CACArE,IAAAA,GAGI,GAFAtE,KAAKwY,SAAStQ,SACdlI,KAAK0d,WAAY,EACE,SAAf1d,KAAK6e,MACL,OACJ7e,KAAKme,yBACLne,KAAK6d,wBACL,MAAM,SAAE/C,GAAa9a,KACrB,IAAK8a,EACD,OACJ,MAAM,UAAErV,EAAS,UAAE2G,EAAS,SAAE/D,EAAQ,KAAEkB,EAAI,KAAEoB,EAAI,MAAE6B,GAAUsO,EAC9D,GAA4B,SAAxBrV,EAAUmmB,WACc,aAAxBnmB,EAAUmmB,UACV,OAUJ,GAAI5rB,KAAKyB,KAAM,CACX,MAAM,YAAEwE,EAAW,SAAEiY,EAAQ,WAAE1E,EAAU,QAAEtN,KAAY1J,GAAYxC,KAAKwC,QAClE+oB,EAAkB,IAAItC,GAAoB,IACzCzmB,EACH4J,YACA/D,WACAkB,OACAoB,OACA6B,QACAlD,aAAa,IAEXuiB,EAAa5iB,EAAsBjJ,KAAKyB,MAC9CwE,EAAYrB,gBAAgB2mB,EAAgBrB,OAAO2B,EAnQ3C,IAmQqEpoB,MAAO8nB,EAAgBrB,OAAO2B,GAAYpoB,MAnQ/G,GAoQZ,CACA,MAAM,OAAE8lB,GAAWvpB,KAAKwC,QACxB+mB,GAAUA,IACVvpB,KAAKkI,QACT,CACAU,QAAAA,GACI,MAAM,SAAEkS,GAAa9a,KAChB8a,GAELA,EAASrV,UAAUklB,QACvB,CACAziB,MAAAA,GACI,MAAM,SAAE4S,GAAa9a,KAChB8a,GAELA,EAASrV,UAAUyC,QACvB,CACA,eAAO4jB,CAAStpB,GACZ,MAAM,YAAEyD,EAAW,KAAE8M,EAAI,YAAE0K,EAAW,WAAElR,EAAU,QAAEyV,EAAO,KAAEzY,GAAS/G,EACtE,IAAKyD,IACAA,EAAYzC,SACXyC,EAAYzC,MAAMpB,mBAAmB2pB,aACvC,OAAO,EAEX,MAAM,SAAE7N,EAAQ,kBAAE8N,GAAsB/lB,EAAYzC,MAAMnE,WAC1D,OAAQ6rB,MACJnY,GACAkY,GAAkB9X,IAAIJ,KACZ,cAATA,IAAyBiZ,KAKzB9N,IACAT,GACc,WAAflR,GACY,IAAZyV,GACS,YAATzY,CACR,ECzTJ,MAAM0iB,GAAoB,CACtB1iB,KAAM,SACNwY,UAAW,IACXC,QAAS,GACTI,UAAW,IAQT8J,GAAsB,CACxB3iB,KAAM,YACNlB,SAAU,IAMRsC,GAAO,CACTpB,KAAM,YACNoB,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBtC,SAAU,IAER8jB,GAAuBA,CAACC,EAAQ7hB,KAAoB,IAAlB,UAAE6B,GAAW7B,EACjD,OAAI6B,EAAUpL,OAAS,EACZkrB,GAEFG,EAAAA,EAAelZ,IAAIiZ,GACjBA,EAAShd,WAAW,SAxBG,CAClC7F,KAAM,SACNwY,UAAW,IACXC,QAAoB,IAsBa5V,EAAU,GAtBnB,EAAIjH,KAAKqQ,KAAK,KAAO,GAC7C4M,UAAW,IAsBD6J,GAEHthB,EAAI,EC3Bf,MAAM2hB,GAAqB,SAACvZ,EAAMtP,EAAOsY,GAAM,IAAEtc,EAAUgD,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyJ,EAAOzJ,UAAAzB,OAAA,EAAAyB,UAAA,QAAAlD,EAAEgtB,EAAS9pB,UAAAzB,OAAA,EAAAyB,UAAA,QAAAlD,EAAA,OAAMia,IACtF,MAAMgT,EAAkBhtB,EAAmBC,EAAYsT,IAAS,CAAC,EAM3D1G,EAAQmgB,EAAgBngB,OAAS5M,EAAW4M,OAAS,EAK3D,IAAI,QAAEge,EAAU,GAAM5qB,EACtB4qB,GAAoBphB,EAAsBoD,GAC1C,IAAI7J,EAAU,CACV4J,UAAW1C,MAAMC,QAAQoS,GAAUA,EAAS,CAAC,KAAMA,GACnDpR,KAAM,UACNtJ,SAAUoC,EAAMyB,iBACbsnB,EACHngB,OAAQge,EACRnM,SAAWpb,IACPW,EAAM/B,IAAIoB,GACV0pB,EAAgBtO,UAAYsO,EAAgBtO,SAASpb,EAAE,EAE3D0W,WAAYA,KACRA,IACAgT,EAAgBhT,YAAcgT,EAAgBhT,YAAY,EAE9DzG,OACA9M,YAAaxC,EACbyI,QAASqgB,OAAYhtB,EAAY2M,IClCzC,SAA4B3B,GAA2I,IAA1I,KAAEkiB,EAAMpgB,MAAOqgB,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEvgB,EAAM,WAAEC,EAAU,YAAEkR,EAAW,KAAElF,EAAI,QAAE8R,KAAY5qB,GAAY8K,EACjK,QAAS+E,OAAOsU,KAAKnkB,GAAYuB,MACrC,EDsCS8rB,CAAoBN,KACrBhqB,EAAU,IACHA,KACA2pB,GAAqBpZ,EAAMvQ,KAQlCA,EAAQ6F,WACR7F,EAAQ6F,SAAWY,EAAsBzG,EAAQ6F,WAEjD7F,EAAQib,cACRjb,EAAQib,YAAcxU,EAAsBzG,EAAQib,mBAEnCle,IAAjBiD,EAAQ+V,OACR/V,EAAQ4J,UAAU,GAAK5J,EAAQ+V,MAEnC,IAAIwU,GAAa,EAwBjB,KAvBqB,IAAjBvqB,EAAQ+G,MACc,IAArB/G,EAAQ6F,WAAmB7F,EAAQib,eACpCjb,EAAQ6F,SAAW,EACG,IAAlB7F,EAAQ6J,QACR0gB,GAAa,KAGjB1jB,GACAxH,EAAAA,EAAmBmrB,kBACnBD,GAAa,EACbvqB,EAAQ6F,SAAW,EACnB7F,EAAQ6J,MAAQ,GAMpB7J,EAAQic,cAAgB+N,EAAgBjjB,OAASijB,EAAgB7hB,KAM7DoiB,IAAeR,QAA6BhtB,IAAhBkE,EAAMuB,MAAqB,CACvD,MAAM8U,EAAgBuD,GAAiB7a,EAAQ4J,UAAWogB,GAC1D,QAAsBjtB,IAAlBua,EAOA,OANA1V,EAAAA,GAAMskB,QAAO,KACTlmB,EAAQ0b,SAASpE,GACjBtX,EAAQgX,YAAY,IAIjB,IAAI3Q,EAAuB,GAE1C,CAMA,OAAK0jB,GAAalB,GAAqBS,SAAStpB,GACrC,IAAI6oB,GAAqB7oB,GAGzB,IAAIymB,GAAoBzmB,EACnC,CACH,EEnGD,SAASyqB,GAAoB1iB,EAAoC7K,GAAK,IAAxC,cAAEwtB,EAAa,eAAEC,GAAgB5iB,EAC3D,MAAM6iB,EAAcF,EAAc1d,eAAe9P,KAAgC,IAAxBytB,EAAeztB,GAExE,OADAytB,EAAeztB,IAAO,EACf0tB,CACX,CACA,SAASC,GAAcpuB,EAAequB,GAAmE,IAA9C,MAAEjhB,EAAQ,EAAC,mBAAEkhB,EAAkB,KAAEhkB,GAAM9G,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,GAC9F,WAAEhD,EAAaR,EAAcktB,uBAAsB,cAAEqB,KAAkBzR,GAAWuR,EAClFC,IACA9tB,EAAa8tB,GACjB,MAAMnmB,EAAa,GACbqmB,EAAqBlkB,GACvBtK,EAAcyuB,gBACdzuB,EAAcyuB,eAAeC,WAAWpkB,GAC5C,IAAK,MAAM7J,KAAOqc,EAAQ,CACtB,MAAMtY,EAAQxE,EAAcmH,SAAS1G,EAAKT,EAAc2uB,aAAaluB,IAAQ,MACvEmuB,EAAc9R,EAAOrc,GAC3B,QAAoBH,IAAhBsuB,GACCJ,GACGR,GAAqBQ,EAAoB/tB,GAC7C,SAEJ,MAAM8sB,EAAkB,CACpBngB,WACG7M,EAAmBC,GAAc,CAAC,EAAGC,IAM5C,IAAI6sB,GAAY,EAChB,GAAItlB,OAAO6mB,uBAAwB,CAC/B,MAAMC,EAAWnnB,EAAqB3H,GACtC,GAAI8uB,EAAU,CACV,MAAM3lB,EAAYnB,OAAO6mB,uBAAuBC,EAAUruB,EAAK0E,EAAAA,IAC7C,OAAdgE,IACAokB,EAAgBpkB,UAAYA,EAC5BmkB,GAAY,EAEpB,CACJ,CACAjmB,EAAqBrH,EAAeS,GACpC+D,EAAM4B,MAAMinB,GAAmB5sB,EAAK+D,EAAOoqB,EAAa5uB,EAAc+uB,oBAAsBruB,EAAewT,IAAIzT,GACzG,CAAE6J,MAAM,GACRijB,EAAiBvtB,EAAestB,IACtC,MAAM9mB,EAAYhC,EAAMgC,UACpBA,GACA2B,EAAW7G,KAAKkF,EAExB,CAQA,OAPI+nB,GACAjoB,QAAQiC,IAAIJ,GAAYzB,MAAK,KACzBvB,EAAAA,GAAMskB,QAAO,KACT8E,G3FjDhB,SAAmBvuB,EAAeC,GAC9B,MAAM4b,EAAW9b,EAAeC,EAAeC,GAC/C,IAAI,cAAEsuB,EAAgB,CAAC,EAAC,WAAE/tB,EAAa,CAAC,KAAMsc,GAAWjB,GAAY,CAAC,EACtEiB,EAAS,IAAKA,KAAWyR,GACzB,IAAK,MAAM9tB,KAAOqc,EAEd7V,EAAejH,EAAeS,GADhBuuB,EAAAA,EAAAA,GAA6BlS,EAAOrc,IAG1D,C2FyCiCwuB,CAAUjvB,EAAeuuB,EAAc,GAC1D,IAGHpmB,CACX,CCnEA,SAAS+mB,GAAelvB,EAAemvB,GAAuB,IAAd5rB,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMqY,EAAW9b,EAAeC,EAAemvB,EAA0B,SAAjB5rB,EAAQ+G,KAC1DtK,EAAcovB,iBAAiBlvB,YAC/BI,GACN,IAAI,WAAEE,EAAaR,EAAcktB,wBAA0B,CAAC,GAAMrR,GAAY,CAAC,EAC3EtY,EAAQ+qB,qBACR9tB,EAAa+C,EAAQ+qB,oBAMzB,MAAMe,EAAexT,EACf,IAAMvV,QAAQiC,IAAI6lB,GAAcpuB,EAAe6b,EAAUtY,IACzD,IAAM+C,QAAQC,UAKd+oB,EAAqBtvB,EAAcuvB,iBAAmBvvB,EAAcuvB,gBAAgBC,KACpF,WAAsB,IAArBC,EAAYjsB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAEkqB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBptB,EAClE,OAkBZ,SAAyBR,EAAemvB,GAAgF,IAAvEzB,EAAalqB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,EAAGmqB,EAAenqB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,EAAGoqB,EAAgBpqB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,EAAGD,EAAOC,UAAAzB,OAAA,EAAAyB,UAAA,QAAAlD,EAClH,MAAM6H,EAAa,GACbunB,GAAsB1vB,EAAcuvB,gBAAgBC,KAAO,GAAK7B,EAChEgC,EAA+C,IAArB/B,EAC1B,WAAM,OAAJpqB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,GAAUmqB,CAAe,EAC9B,WAAM,OAAK+B,GAATlsB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,GAA+BmqB,CAAe,EAUzD,OATAljB,MAAM6O,KAAKtZ,EAAcuvB,iBACpBK,KAAKC,IACL7mB,SAAQ,CAAC8mB,EAAO9tB,KACjB8tB,EAAMpuB,OAAO,iBAAkBytB,GAC/BhnB,EAAW7G,KAAK4tB,GAAeY,EAAOX,EAAS,IACxC5rB,EACH6J,MAAOsgB,EAAgBiC,EAAwB3tB,KAChD0E,MAAK,IAAMopB,EAAMpuB,OAAO,oBAAqBytB,KAAU,IAEvD7oB,QAAQiC,IAAIJ,EACvB,CAlCmB4nB,CAAgB/vB,EAAemvB,EAASzB,EAAgB+B,EAAc9B,EAAiBC,EAAkBrqB,EACpH,EACE,IAAM+C,QAAQC,WAKd,KAAEinB,GAAShtB,EACjB,GAAIgtB,EAAM,CACN,MAAOwC,EAAOC,GAAiB,mBAATzC,EAChB,CAAC6B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOW,IAAQtpB,MAAK,IAAMupB,KAC9B,CAEI,OAAO3pB,QAAQiC,IAAI,CAAC8mB,IAAgBC,EAAmB/rB,EAAQ6J,QAEvE,CAkBA,SAASyiB,GAAgBluB,EAAGC,GACxB,OAAOD,EAAEuuB,iBAAiBtuB,EAC9B,C,cC9DA,SAASuuB,GAAetQ,EAAM3b,GAC1B,IAAKuG,MAAMC,QAAQxG,GACf,OAAO,EACX,MAAMksB,EAAalsB,EAAKnC,OACxB,GAAIquB,IAAevQ,EAAK9d,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIouB,EAAYpuB,IAC5B,GAAIkC,EAAKlC,KAAO6d,EAAK7d,GACjB,OAAO,EAEf,OAAO,CACX,C,wBCRA,MAAMquB,GAAkBC,GAAAA,EAAavuB,OACrC,SAASwuB,GAAkBvwB,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAcwwB,sBAAuB,CACtC,MAAMC,EAAUzwB,EAAc0wB,QACxBH,GAAkBvwB,EAAc0wB,SAChC,CAAC,EAIP,YAHoCpwB,IAAhCN,EAAcG,MAAMwwB,UACpBF,EAAQE,QAAU3wB,EAAcG,MAAMwwB,SAEnCF,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIzuB,EAAI,EAAGA,EAAIquB,GAAiBruB,IAAK,CACtC,MAAM8R,EAAOwc,GAAAA,EAAatuB,GACpB4uB,EAAO5wB,EAAcG,MAAM2T,KAC7B+c,EAAAA,GAAAA,GAAeD,KAAkB,IAATA,KACxBH,EAAQ3c,GAAQ8c,EAExB,CACA,OAAOH,CACX,CChBA,MAAMK,GAAuB,IAAIC,GAAAA,GAAsB3I,UACjD4I,GAAoBD,GAAAA,EAAqBhvB,OAC/C,SAASkvB,GAAYjxB,GACjB,OAAQmI,GAAe7B,QAAQiC,IAAIJ,EAAWK,KAAI8C,IAAA,IAAC,UAAE9E,EAAS,QAAEjD,GAAS+H,EAAA,OCR7E,SAA8BtL,EAAeC,GAA0B,IAE/DuG,EAFiDjD,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAxD,EAAc0B,OAAO,iBAAkBzB,GAEnCwK,MAAMC,QAAQzK,GAAa,CAC3B,MAAMkI,EAAalI,EAAWuI,KAAK2mB,GAAYD,GAAelvB,EAAemvB,EAAS5rB,KACtFiD,EAAYF,QAAQiC,IAAIJ,EAC5B,MACK,GAA0B,kBAAflI,EACZuG,EAAY0oB,GAAelvB,EAAeC,EAAYsD,OAErD,CACD,MAAM2tB,EAA2C,oBAAfjxB,EAC5BF,EAAeC,EAAeC,EAAYsD,EAAQrD,QAClDD,EACNuG,EAAYF,QAAQiC,IAAI6lB,GAAcpuB,EAAekxB,EAAoB3tB,GAC7E,CACA,OAAOiD,EAAUE,MAAK,KAClB1G,EAAc0B,OAAO,oBAAqBzB,EAAW,GAE7D,CDXkFkxB,CAAqBnxB,EAAewG,EAAWjD,EAAQ,IACzI,CACA,SAAS6tB,GAAqBpxB,GAC1B,IAAIkL,EAAU+lB,GAAYjxB,GACtB4f,EAAQyR,KACRC,GAAkB,EAKtB,MAAMC,EAA2BjnB,GAAS,CAACknB,EAAKvxB,KAC5C,MAAM4b,EAAW9b,EAAeC,EAAeC,EAAqB,SAATqK,EACrDtK,EAAcovB,iBAAiBlvB,YAC/BI,GACN,GAAIub,EAAU,CACV,MAAM,WAAErb,EAAU,cAAE+tB,KAAkBzR,GAAWjB,EACjD2V,EAAM,IAAKA,KAAQ1U,KAAWyR,EAClC,CACA,OAAOiD,CAAG,EAmBd,SAASC,EAAeC,GACpB,MAAM,MAAEvxB,GAAUH,EACZywB,EAAUF,GAAkBvwB,EAAc0wB,SAAW,CAAC,EAKtDvoB,EAAa,GAKbwpB,EAAc,IAAIhxB,IAMxB,IAAIixB,EAAkB,CAAC,EAKnBC,EAAsB9R,IAO1B,IAAK,IAAI/d,EAAI,EAAGA,EAAIgvB,GAAmBhvB,IAAK,CACxC,MAAMsI,EAAOwmB,GAAqB9uB,GAC5B8vB,EAAYlS,EAAMtV,GAClBsmB,OAAuBtwB,IAAhBH,EAAMmK,GACbnK,EAAMmK,GACNmmB,EAAQnmB,GACRynB,GAAgBlB,EAAAA,GAAAA,GAAeD,GAK/BoB,EAAc1nB,IAASonB,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsB7vB,GAO1B,IAAIkwB,EAActB,IAASH,EAAQnmB,IAC/BsmB,IAASzwB,EAAMmK,IACfynB,EAeJ,GAXIG,GACAZ,GACAtxB,EAAcmyB,yBACdD,GAAc,GAMlBJ,EAAU7D,cAAgB,IAAK2D,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBpB,IAASkB,EAAUM,WAErBC,EAAAA,EAAAA,GAAoBzB,IACJ,mBAATA,EACP,SAOJ,MAAM0B,EAAmBC,GAAuBT,EAAUM,SAAUxB,GACpE,IAAI4B,EAAoBF,GAEnBhoB,IAASonB,GACNI,EAAUG,WACTC,GACDH,GAEH/vB,EAAI6vB,GAAuBE,EAC5BU,GAAuB,EAK3B,MAAMC,EAAiBjoB,MAAMC,QAAQkmB,GAAQA,EAAO,CAACA,GAKrD,IAAI+B,EAAiBD,EAAepR,OAAOiQ,EAAwBjnB,GAAO,CAAC,IACvD,IAAhB0nB,IACAW,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMd,EAC9Be,EAAU,IACTD,KACAD,GAEDG,EAAiBryB,IACnB+xB,GAAoB,EAChBb,EAAYzd,IAAIzT,KAChBgyB,GAAuB,EACvBd,EAAYzW,OAAOza,IAEvBqxB,EAAU5D,eAAeztB,IAAO,EAChC,MAAMuG,EAAchH,EAAcmH,SAAS1G,GACvCuG,IACAA,EAAY+rB,WAAY,EAAK,EAErC,IAAK,MAAMtyB,KAAOoyB,EAAS,CACvB,MAAMhT,EAAO8S,EAAelyB,GACtByD,EAAO0uB,EAAmBnyB,GAEhC,GAAImxB,EAAgBrhB,eAAe9P,GAC/B,SAIJ,IAAIuyB,GAAkB,EAElBA,GADAC,EAAAA,GAAAA,GAAkBpT,KAASoT,EAAAA,GAAAA,GAAkB/uB,IAC1BisB,GAAetQ,EAAM3b,GAGtB2b,IAAS3b,EAE3B8uB,OACa1yB,IAATuf,GAA+B,OAATA,EAEtBiT,EAAcryB,GAIdkxB,EAAY1wB,IAAIR,QAGNH,IAATuf,GAAsB8R,EAAYzd,IAAIzT,GAK3CqyB,EAAcryB,GAOdqxB,EAAU7D,cAAcxtB,IAAO,CAEvC,CAKAqxB,EAAUM,SAAWxB,EACrBkB,EAAUc,mBAAqBD,EAI3Bb,EAAUG,WACVL,EAAkB,IAAKA,KAAoBe,IAE3CrB,GAAmBtxB,EAAckzB,wBACjCV,GAAoB,GAQpBA,MAFyBN,GAAeI,IACIG,IAE5CtqB,EAAW7G,QAAQoxB,EAAelqB,KAAKhC,IAAS,CAC5CA,UAAWA,EACXjD,QAAS,CAAE+G,YAGvB,CAMA,GAAIqnB,EAAYnC,KAAM,CAClB,MAAM2D,EAAoB,CAAC,EAK3B,GAA6B,mBAAlBhzB,EAAMwwB,QAAuB,CACpC,MAAMyC,EAAoBrzB,EAAeC,EAAeyK,MAAMC,QAAQvK,EAAMwwB,SACtExwB,EAAMwwB,QAAQ,GACdxwB,EAAMwwB,SACRyC,GAAqBA,EAAkB5yB,aACvC2yB,EAAkB3yB,WAAa4yB,EAAkB5yB,WAEzD,CACAmxB,EAAY3oB,SAASvI,IACjB,MAAM4yB,EAAiBrzB,EAAcszB,cAAc7yB,GAC7CuG,EAAchH,EAAcmH,SAAS1G,GACvCuG,IACAA,EAAY+rB,WAAY,GAE5BI,EAAkB1yB,GAAO4yB,GAAkB,IAAI,IAEnDlrB,EAAW7G,KAAK,CAAEkF,UAAW2sB,GACjC,CACA,IAAII,EAAgBhsB,QAAQY,EAAWpG,QAOvC,OANIuvB,IACmB,IAAlBnxB,EAAMwwB,SAAqBxwB,EAAMwwB,UAAYxwB,EAAM+K,SACnDlL,EAAcmyB,yBACfoB,GAAgB,GAEpBjC,GAAkB,EACXiC,EAAgBroB,EAAQ/C,GAAc7B,QAAQC,SACzD,CAiBA,MAAO,CACHkrB,iBACA+B,UAfJ,SAAmBlpB,EAAM2nB,GAErB,GAAIrS,EAAMtV,GAAM2nB,WAAaA,EACzB,OAAO3rB,QAAQC,UAEnBvG,EAAcuvB,iBAAiBvmB,SAAS8mB,GAAUA,EAAMrB,gBAAgB+E,UAAUlpB,EAAM2nB,KACxFrS,EAAMtV,GAAM2nB,SAAWA,EACvB,MAAM9pB,EAAaspB,EAAennB,GAClC,IAAK,MAAM7J,KAAOmf,EACdA,EAAMnf,GAAKwtB,cAAgB,CAAC,EAEhC,OAAO9lB,CACX,EAIIsrB,mBA5QJ,SAA4BC,GACxBxoB,EAAUwoB,EAAa1zB,EAC3B,EA2QI0uB,SAAUA,IAAM9O,EAChB+T,MAAOA,KACH/T,EAAQyR,KACRC,GAAkB,CAAI,EAGlC,CACA,SAASiB,GAAuBruB,EAAM2b,GAClC,MAAoB,kBAATA,EACAA,IAAS3b,IAEXuG,MAAMC,QAAQmV,KACXsQ,GAAetQ,EAAM3b,EAGrC,CACA,SAAS0vB,KACL,MAAO,CACH3B,SAFyBzuB,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,IAAAA,UAAA,GAGzByqB,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjB0E,mBAAoB,CAAC,EAE7B,CACA,SAASvB,KACL,MAAO,CACHnmB,QAAS0oB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEnVA,MAAMO,GACFrzB,WAAAA,CAAYszB,GACRrzB,KAAKszB,WAAY,EACjBtzB,KAAKqzB,KAAOA,CAChB,CACA3K,MAAAA,GAAW,ECHf,IAAI6K,GAAK,ECCT,MAAMnsB,GAAa,CACf3B,UAAW,CACP2tB,QCDR,cAA+BA,GAM3BrzB,WAAAA,CAAYszB,GACR1X,MAAM0X,GACNA,EAAK3F,iBAAmB2F,EAAK3F,eAAiB2C,GAAqBgD,GACvE,CACAG,mCAAAA,GACI,MAAM,QAAErpB,GAAYnK,KAAKqzB,KAAKh0B,YAC1BiyB,EAAAA,EAAAA,GAAoBnnB,KACpBnK,KAAKyzB,gBAAkBtpB,EAAQupB,UAAU1zB,KAAKqzB,MAEtD,CAIAM,KAAAA,GACI3zB,KAAKwzB,qCACT,CACA9K,MAAAA,GACI,MAAM,QAAEve,GAAYnK,KAAKqzB,KAAKh0B,YACtB8K,QAASypB,GAAgB5zB,KAAKqzB,KAAKQ,WAAa,CAAC,EACrD1pB,IAAYypB,GACZ5zB,KAAKwzB,qCAEb,CACAM,OAAAA,GACI9zB,KAAKqzB,KAAK3F,eAAekF,QACzB5yB,KAAKyzB,mBACT,ID7BAN,KAAM,CACFC,QDLR,cAAmCA,GAC/BrzB,WAAAA,GACI4b,SAASlZ,WACTzC,KAAKuzB,GAAKA,IACd,CACA7K,MAAAA,GACI,IAAK1oB,KAAKqzB,KAAKhF,gBACX,OACJ,MAAM,UAAE0F,EAAS,eAAEC,GAAmBh0B,KAAKqzB,KAAKhF,iBACxC0F,UAAWE,GAAkBj0B,KAAKqzB,KAAKa,qBAAuB,CAAC,EACvE,IAAKl0B,KAAKqzB,KAAK3F,gBAAkBqG,IAAcE,EAC3C,OAEJ,MAAME,EAAgBn0B,KAAKqzB,KAAK3F,eAAe+E,UAAU,QAASsB,GAC9DC,IAAmBD,GACnBI,EAAcxuB,MAAK,KACfquB,EAAeh0B,KAAKuzB,GAAG,GAGnC,CACAI,KAAAA,GACI,MAAM,SAAES,EAAQ,eAAEJ,GAAmBh0B,KAAKqzB,KAAKhF,iBAAmB,CAAC,EAC/D2F,GACAA,EAAeh0B,KAAKuzB,IAEpBa,IACAp0B,KAAK8zB,QAAUM,EAASp0B,KAAKuzB,IAErC,CACAO,OAAAA,GAAY,KGhCVO,IACC,EADDA,IAEC,EAEP,SAASC,KACL,OAAOD,IAAgBA,EAC3B,CCJA,SAASE,GAAaC,EAAmBhyB,GACrC,MAAMiyB,ECHV,SAAyBD,EAAmBE,EAAOC,GAC/C,GAAIH,aAA6BI,YAC7B,MAAO,CAACJ,GAEP,GAAiC,kBAAtBA,EAAgC,CAC5C,IAAItQ,EAAOja,SACPyqB,IACAxQ,EAAOwQ,EAAMtyB,SAEjB,MAAMqyB,EAAWE,IAAgBH,IAC7BtQ,EAAK2Q,iBAAiBL,GAC1B,OAAOC,EAAW/qB,MAAM6O,KAAKkc,GAAY,EAC7C,CACA,OAAO/qB,MAAM6O,KAAKic,EACtB,CDXqBM,CAAgBN,GAC3BO,EAAyB,IAAIC,gBAOnC,MAAO,CAACP,EANa,CACjBQ,SAAS,KACNzyB,EACH0yB,OAAQH,EAAuBG,QAEpBhtB,IAAM6sB,EAAuBI,QAEhD,CETA,SAASC,GAAaC,GAClB,QAA+B,UAAtBA,EAAMC,aAA2BhB,KAC9C,CCHA,SAASiB,GAAiBF,GACtB,MAAO,CACHG,MAAO,CACH3nB,EAAGwnB,EAAMI,MACT5gB,EAAGwgB,EAAMK,OAGrB,CCLA,SAASC,GAAiBtC,EAAMgC,EAAOO,GACnC,MAAM,MAAEx2B,GAAUi0B,EACdA,EAAK3F,gBAAkBtuB,EAAM2zB,YAC7BM,EAAK3F,eAAe+E,UAAU,aAA4B,UAAdmD,GAEhD,MACM1xB,EAAW9E,EADE,UAAYw2B,GAE3B1xB,GACAE,EAAAA,GAAMyxB,YAAW,IAAM3xB,EAASmxB,EAAOE,GAAiBF,KAEhE,CCdA,SAASS,GAAY/Z,EAAQ9X,EAAW9D,GAAsC,IAA7BqC,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAEwyB,SAAS,GAElE,OADAlZ,EAAOga,iBAAiB9xB,EAAW9D,EAASqC,GACrC,IAAMuZ,EAAOia,oBAAoB/xB,EAAW9D,EACvD,CCIA,MAAM81B,GAAgBA,CAACtG,EAAQZ,MACtBA,IAGIY,IAAWZ,GAITkH,GAActG,EAAQZ,EAAMmH,gBCfrCC,GAAoB,IAAIv2B,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAMw2B,GAAa,IAAIC,QCKvB,SAASC,GAAapyB,GAClB,OAAQmxB,IACc,UAAdA,EAAM31B,KAEVwE,EAASmxB,EAAM,CAEvB,CACA,SAASkB,GAAiBxa,EAAQxS,GAC9BwS,EAAOya,cAAc,IAAIC,aAAa,UAAYltB,EAAM,CAAEmtB,WAAW,EAAMC,SAAS,IACxF,CCFA,SAASC,GAAkBvB,GACvB,MCbsBA,IACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAMwB,QAAuBxB,EAAMwB,QAAU,GAWhC,IAApBxB,EAAMqB,UDAVI,CAAiBzB,KAAWf,IACvC,CAoBA,SAASyC,GAAMC,EAAkBC,GAA4B,IAAdz0B,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtD,MAAOy0B,EAASC,EAAcC,GAAgB7C,GAAayC,EAAkBx0B,GACvE60B,EAAcC,IAChB,MAAMvb,EAASub,EAAWC,cAC1B,IAAKX,GAAkBU,IAAelB,GAAWjjB,IAAI4I,GACjD,OACJqa,GAAWl2B,IAAI6b,GACf,MAAMyb,EAAaP,EAAalb,EAAQub,GAClCG,EAAeA,CAACC,EAAUC,KAC5B1wB,OAAO+uB,oBAAoB,YAAa4B,GACxC3wB,OAAO+uB,oBAAoB,gBAAiB6B,GACvCjB,GAAkBc,IAActB,GAAWjjB,IAAI4I,KAGpDqa,GAAWjc,OAAO4B,GACQ,oBAAfyb,GACPA,EAAWE,EAAU,CAAEC,YAC3B,EAEEC,EAAeE,IACjBL,EAAaK,EAAS/b,IAAW9U,QAC7B8U,IAAW9R,UACXzH,EAAQu1B,iBACR9B,GAAcla,EAAQ+b,EAAQ/b,QAAQ,EAExC8b,EAAmBG,IACrBP,EAAaO,GAAa,EAAM,EAEpC/wB,OAAO8uB,iBAAiB,YAAa6B,EAAaT,GAClDlwB,OAAO8uB,iBAAiB,gBAAiB8B,EAAiBV,EAAa,EAa3E,OAXAD,EAAQjvB,SAAS8T,IH1DrB,IAAqC7P,GG2DH1J,EAAQu1B,gBAAkB9wB,OAAS8U,GAC3Cga,iBAAiB,cAAesB,EAAYF,GAC1Dpb,aAAkBgQ,cAClBhQ,EAAOga,iBAAiB,SAAUV,GDtDlB4C,EAACC,EAAYf,KACrC,MAAMjrB,EAAUgsB,EAAWX,cAC3B,IAAKrrB,EACD,OACJ,MAAMisB,EAAgB7B,IAAa,KAC/B,GAAIF,GAAWjjB,IAAIjH,GACf,OACJqqB,GAAiBrqB,EAAS,QAC1B,MAAMksB,EAAc9B,IAAa,KAC7BC,GAAiBrqB,EAAS,KAAK,IAGnCA,EAAQ6pB,iBAAiB,QAASqC,EAAajB,GAC/CjrB,EAAQ6pB,iBAAiB,QAFNsC,IAAM9B,GAAiBrqB,EAAS,WAENirB,EAAa,IAE9DjrB,EAAQ6pB,iBAAiB,UAAWoC,EAAehB,GAInDjrB,EAAQ6pB,iBAAiB,QAAQ,IAAM7pB,EAAQ8pB,oBAAoB,UAAWmC,IAAgBhB,EAAa,ECmCvDc,CAAoB5C,EAAO8B,KH9D9CjrB,EG+DQ6P,EH9DjCoa,GAAkBhjB,IAAIjH,EAAQosB,WACZ,IAAtBpsB,EAAQqsB,UG8DCxc,EAAOyc,aAAa,cACrBzc,EAAOwc,SAAW,GAE1B,IAEGnB,CACX,CEzEA,SAASqB,GAAiBpF,EAAMgC,EAAOO,GACnC,MAAM,MAAEx2B,GAAUi0B,EAClB,GAAIA,EAAKjxB,mBAAmBs2B,mBAAqBrF,EAAKjxB,QAAQu2B,SAC1D,OAEAtF,EAAK3F,gBAAkBtuB,EAAM4zB,UAC7BK,EAAK3F,eAAe+E,UAAU,WAA0B,UAAdmD,GAE9C,MACM1xB,EAAW9E,EADE,SAAyB,QAAdw2B,EAAsB,GAAKA,IAErD1xB,GACAE,EAAAA,GAAMyxB,YAAW,IAAM3xB,EAASmxB,EAAOE,GAAiBF,KAEhE,CCZA,MAAMuD,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAM90B,EAAW00B,GAAkB5zB,IAAIg0B,EAAMjd,QAC7C7X,GAAYA,EAAS80B,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQjxB,QAAQ8wB,GAAqB,EAqBzC,SAASI,GAAoBjtB,EAAS1J,EAAS0B,GAC3C,MAAMk1B,EApBV,SAAiC7uB,GAAuB,IAAtB,KAAE2Z,KAAS1hB,GAAS+H,EAClD,MAAM8uB,EAAanV,GAAQja,SAItB6uB,GAAU3lB,IAAIkmB,IACfP,GAAUp3B,IAAI23B,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAU9zB,IAAIq0B,GAC9B35B,EAAM65B,KAAKC,UAAUh3B,GAQ3B,OAHK82B,EAAc55B,KACf45B,EAAc55B,GAAO,IAAI+5B,qBAAqBR,GAA0B,CAAE/U,UAAS1hB,KAEhF82B,EAAc55B,EACzB,CAEsCg6B,CAAyBl3B,GAG3D,OAFAo2B,GAAkBl3B,IAAIwK,EAAShI,GAC/Bk1B,EAA0BO,QAAQztB,GAC3B,KACH0sB,GAAkBze,OAAOjO,GACzBktB,EAA0BQ,UAAU1tB,EAAQ,CAEpD,CC3CA,MAAM2tB,GAAiB,CACnBhW,KAAM,EACNrc,IAAK,GCAT,MAAMsyB,GAAoB,CACtBC,OAAQ,CACJ3G,QDAR,cAA4BA,GACxBrzB,WAAAA,GACI4b,SAASlZ,WACTzC,KAAKg6B,gBAAiB,EACtBh6B,KAAKi6B,UAAW,CACpB,CACAC,aAAAA,GACIl6B,KAAK8zB,UACL,MAAM,SAAEqG,EAAW,CAAC,GAAMn6B,KAAKqzB,KAAKh0B,YAC9B,KAAE6kB,EAAMkW,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASJ,EACtD33B,EAAU,CACZ0hB,KAAMA,EAAOA,EAAK9hB,aAAU7C,EAC5B86B,aACAG,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOnB,GAAoBn5B,KAAKqzB,KAAKjxB,QAASI,GA7BhBw2B,IAC1B,MAAM,eAAEyB,GAAmBzB,EAI3B,GAAIh5B,KAAKi6B,WAAaQ,EAClB,OAMJ,GALAz6B,KAAKi6B,SAAWQ,EAKZF,IAASE,GAAkBz6B,KAAKg6B,eAChC,OAEKS,IACLz6B,KAAKg6B,gBAAiB,GAEtBh6B,KAAKqzB,KAAK3F,gBACV1tB,KAAKqzB,KAAK3F,eAAe+E,UAAU,cAAegI,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB36B,KAAKqzB,KAAKh0B,WACjD6E,EAAWu2B,EAAiBC,EAAkBC,EACpDz2B,GAAYA,EAAS80B,EAAM,GAGnC,CACArF,KAAAA,GACI3zB,KAAKk6B,eACT,CACAxR,MAAAA,GACI,GAAoC,qBAAzB+Q,qBACP,OACJ,MAAM,MAAEr6B,EAAK,UAAEy0B,GAAc7zB,KAAKqzB,KAC5BuH,EAAoB,CAAC,SAAU,SAAU,QAAQ/W,KAO/D,SAAiCtZ,GAA0D,IAAzD,SAAE4vB,EAAW,CAAC,GAAG5vB,GAAI4vB,SAAUU,EAAe,CAAC,GAAGp4B,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQsQ,GAASonB,EAASpnB,KAAU8nB,EAAa9nB,EACrD,CAToE+nB,CAAyB17B,EAAOy0B,IACxF+G,GACA56B,KAAKk6B,eAEb,CACApG,OAAAA,GAAY,ICxDZiH,IAAK,CACD3H,QHQR,cAA2BA,GACvBO,KAAAA,GACI,MAAM,QAAEvxB,GAAYpC,KAAKqzB,KACpBjxB,IAELpC,KAAK8zB,QAAUiD,GAAM30B,GAAS,CAAC44B,EAAU1D,KACrCmB,GAAiBz4B,KAAKqzB,KAAMiE,EAAY,SACjC,CAACI,EAAQntB,KAAA,IAAE,QAAEotB,GAASptB,EAAA,OAAKkuB,GAAiBz4B,KAAKqzB,KAAMqE,EAAUC,EAAU,MAAQ,SAAS,IACpG,CAAEI,gBAAiB/3B,KAAKqzB,KAAKj0B,MAAM67B,kBAC1C,CACAnH,OAAAA,GAAY,IGhBZoH,MAAO,CACH9H,QCTR,cAA2BA,GACvBrzB,WAAAA,GACI4b,SAASlZ,WACTzC,KAAKkxB,UAAW,CACpB,CACAiK,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBp7B,KAAKqzB,KAAKjxB,QAAQi5B,QAAQ,iBAC/C,CACA,MAAOhxB,GACH+wB,GAAiB,CACrB,CACKA,GAAmBp7B,KAAKqzB,KAAK3F,iBAElC1tB,KAAKqzB,KAAK3F,eAAe+E,UAAU,cAAc,GACjDzyB,KAAKkxB,UAAW,EACpB,CACAoK,MAAAA,GACSt7B,KAAKkxB,UAAalxB,KAAKqzB,KAAK3F,iBAEjC1tB,KAAKqzB,KAAK3F,eAAe+E,UAAU,cAAc,GACjDzyB,KAAKkxB,UAAW,EACpB,CACAyC,KAAAA,GACI3zB,KAAK8zB,QAAU3T,GAAK2V,GAAY91B,KAAKqzB,KAAKjxB,QAAS,SAAS,IAAMpC,KAAKm7B,YAAYrF,GAAY91B,KAAKqzB,KAAKjxB,QAAS,QAAQ,IAAMpC,KAAKs7B,WACzI,CACAxH,OAAAA,GAAY,IDtBZyH,MAAO,CACHnI,QXDR,cAA2BA,GACvBO,KAAAA,GACI,MAAM,QAAEvxB,GAAYpC,KAAKqzB,KACpBjxB,IAELpC,KAAK8zB,QFPb,SAAeU,EAAmBgH,GAA4B,IAAdh5B,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAOgyB,EAAU0C,EAAcjvB,GAAUqsB,GAAaC,EAAmBhyB,GACnEi5B,EAAkBC,IACpB,IAAKtG,GAAasG,GACd,OACJ,MAAM,OAAE3f,GAAW2f,EACbC,EAAaH,EAAazf,EAAQ2f,GACxC,GAA0B,oBAAfC,IAA8B5f,EACrC,OACJ,MAAM6f,EAAkBC,IACfzG,GAAayG,KAElBF,EAAWE,GACX9f,EAAOia,oBAAoB,eAAgB4F,GAAe,EAE9D7f,EAAOga,iBAAiB,eAAgB6F,EAAgBzE,EAAa,EAKzE,OAHA1C,EAASxsB,SAASiE,IACdA,EAAQ6pB,iBAAiB,eAAgB0F,EAAgBtE,EAAa,IAEnEjvB,CACX,CEduBqzB,CAAMn5B,GAAS,CAAC44B,EAAU1D,KACrC3B,GAAiB31B,KAAKqzB,KAAMiE,EAAY,SAChCI,GAAa/B,GAAiB31B,KAAKqzB,KAAMqE,EAAU,UAEnE,CACA5D,OAAAA,GAAY,K,aatBhB,SAAStX,GAAmBsf,EAAUC,GAClC,OCCJ,SAAgCxxB,GAAgC,IAA/B,IAAE8M,EAAG,KAAEG,EAAI,MAAEK,EAAK,OAAEH,GAASnN,EAC1D,MAAO,CACHsD,EAAG,CAAEzI,IAAKoS,EAAMlP,IAAKuP,GACrBhD,EAAG,CAAEzP,IAAKiS,EAAK/O,IAAKoP,GAE5B,CDNWskB,CCeX,SAA4BxG,EAAOuG,GAC/B,IAAKA,EACD,OAAOvG,EACX,MAAMyG,EAAUF,EAAe,CAAEluB,EAAG2nB,EAAMhe,KAAM3C,EAAG2gB,EAAMne,MACnD6kB,EAAcH,EAAe,CAAEluB,EAAG2nB,EAAM3d,MAAOhD,EAAG2gB,EAAM9d,SAC9D,MAAO,CACHL,IAAK4kB,EAAQpnB,EACb2C,KAAMykB,EAAQpuB,EACd6J,OAAQwkB,EAAYrnB,EACpBgD,MAAOqkB,EAAYruB,EAE3B,CD1BmCsuB,CAAmBL,EAASM,wBAAyBL,GACxF,C,cELA,MAWMM,GAAYA,KAAA,CACdxuB,EAFe,CAASzI,IAAK,EAAGkD,IAAK,GAGrCuM,EAHe,CAASzP,IAAK,EAAGkD,IAAK,K,cCTzC,MAAMg0B,GAAuB,CAAEl6B,QAAS,MAClCm6B,GAA2B,CAAEn6B,SAAS,GCM5C,MAAMo6B,GAAa,IAAIphB,GAAqBhK,GAAOqB,ICR7CgqB,GAAqB,IAAI5D,Q,cCmB/B,MAAM6D,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQFC,2BAAAA,CAA4BC,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACAh9B,WAAAA,CAAWwK,GAA6G,IAA5G,OAAEolB,EAAM,MAAEvwB,EAAK,gBAAEivB,EAAe,oBAAE2O,EAAmB,sBAAE7K,EAAqB,YAAE8K,GAAc1yB,EAAE/H,EAAOC,UAAAzB,OAAA,QAAAzB,IAAAkD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAKjHzC,KAAKoC,QAAU,KAIfpC,KAAKk9B,SAAW,IAAIt9B,IAIpBI,KAAKm9B,eAAgB,EACrBn9B,KAAKyvB,uBAAwB,EAQ7BzvB,KAAKguB,mBAAqB,KAM1BhuB,KAAK4R,OAAS,IAAIgH,IAClB5Y,KAAKsZ,iBAAmBA,GAIxBtZ,KAAKo9B,SAAW,CAAC,EAKjBp9B,KAAKq9B,mBAAqB,IAAIzkB,IAM9B5Y,KAAKs9B,iBAAmB,CAAC,EAIzBt9B,KAAK4C,OAAS,CAAC,EAMf5C,KAAKu9B,uBAAyB,CAAC,EAC/Bv9B,KAAKw9B,aAAe,IAAMx9B,KAAKW,OAAO,SAAUX,KAAK4tB,cACrD5tB,KAAK+C,OAAS,KACL/C,KAAKoC,UAEVpC,KAAKy9B,eACLz9B,KAAK09B,eAAe19B,KAAKoC,QAASpC,KAAK29B,YAAa39B,KAAKZ,MAAMw+B,MAAO59B,KAAK69B,YAAW,EAE1F79B,KAAK89B,kBAAoB,EACzB99B,KAAK+9B,eAAiB,KAClB,MAAMx8B,EAAME,EAAKF,MACbvB,KAAK89B,kBAAoBv8B,IACzBvB,KAAK89B,kBAAoBv8B,EACzB6C,EAAAA,GAAMrB,OAAO/C,KAAK+C,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAE6qB,EAAY,YAAE+P,EAAW,SAAEzf,GAAa+e,EAChDj9B,KAAKke,SAAWA,EAChBle,KAAK4tB,aAAeA,EACpB5tB,KAAKg+B,WAAa,IAAKpQ,GACvB5tB,KAAKi+B,cAAgB7+B,EAAMwwB,QAAU,IAAKhC,GAAiB,CAAC,EAC5D5tB,KAAK29B,YAAcA,EACnB39B,KAAK2vB,OAASA,EACd3vB,KAAKZ,MAAQA,EACbY,KAAKquB,gBAAkBA,EACvBruB,KAAKwa,MAAQmV,EAASA,EAAOnV,MAAQ,EAAI,EACzCxa,KAAKg9B,oBAAsBA,EAC3Bh9B,KAAKwC,QAAUA,EACfxC,KAAKmyB,sBAAwB3rB,QAAQ2rB,GACrCnyB,KAAKyvB,uBAAwBA,EAAAA,GAAAA,GAAsBrwB,GACnDY,KAAKm9B,eAAgBA,EAAAA,GAAAA,GAAc/9B,GAC/BY,KAAKm9B,gBACLn9B,KAAKwuB,gBAAkB,IAAI5uB,KAE/BI,KAAKoxB,uBAAyB5qB,QAAQmpB,GAAUA,EAAOvtB,SAWvD,MAAM,WAAEmE,KAAe23B,GAAwBl+B,KAAK48B,4BAA4Bx9B,EAAO,CAAC,EAAGY,MAC3F,IAAK,MAAMN,KAAOw+B,EAAqB,CACnC,MAAMz6B,EAAQy6B,EAAoBx+B,QACRH,IAAtBquB,EAAaluB,KAAsB+G,EAAAA,EAAAA,GAAchD,IACjDA,EAAM/B,IAAIksB,EAAaluB,IAAM,EAErC,CACJ,CACAi0B,KAAAA,CAAMmI,GACF97B,KAAKoC,QAAU05B,EACfW,GAAmB/6B,IAAIo6B,EAAU97B,MAC7BA,KAAK69B,aAAe79B,KAAK69B,WAAW/B,UACpC97B,KAAK69B,WAAWlK,MAAMmI,GAEtB97B,KAAK2vB,QAAU3vB,KAAKm9B,gBAAkBn9B,KAAKyvB,wBAC3CzvB,KAAKm+B,sBAAwBn+B,KAAK2vB,OAAOyO,gBAAgBp+B,OAE7DA,KAAK4R,OAAO3J,SAAQ,CAACxE,EAAO/D,IAAQM,KAAKq+B,kBAAkB3+B,EAAK+D,KAC3D84B,GAAyBn6B,SC7JtC,WAEI,GADAm6B,GAAyBn6B,SAAU,EAC9Bk8B,GAAAA,EAEL,GAAIr3B,OAAOs3B,WAAY,CACnB,MAAMC,EAAmBv3B,OAAOs3B,WAAW,4BACrCE,EAA8BA,IAAOnC,GAAqBl6B,QAAUo8B,EAAiBnD,QAC3FmD,EAAiBE,YAAYD,GAC7BA,GACJ,MAEInC,GAAqBl6B,SAAU,CAEvC,CDiJYu8B,GAEJ3+B,KAAKguB,mBAC4B,UAA7BhuB,KAAKg9B,sBAE8B,WAA7Bh9B,KAAKg9B,qBAEDV,GAAqBl6B,SAI/BpC,KAAK2vB,QACL3vB,KAAK2vB,OAAOuN,SAASh9B,IAAIF,MAC7BA,KAAK0oB,OAAO1oB,KAAKZ,MAAOY,KAAKquB,gBACjC,CACAyF,OAAAA,GACI9zB,KAAK69B,YAAc79B,KAAK69B,WAAW/J,WACnClL,EAAAA,EAAAA,IAAY5oB,KAAKw9B,eACjB5U,EAAAA,EAAAA,IAAY5oB,KAAK+C,QACjB/C,KAAKq9B,mBAAmBp1B,SAAS22B,GAAWA,MAC5C5+B,KAAKq9B,mBAAmBl8B,QACxBnB,KAAKm+B,uBAAyBn+B,KAAKm+B,wBACnCn+B,KAAK2vB,QAAU3vB,KAAK2vB,OAAOuN,SAAS/iB,OAAOna,MAC3C,IAAK,MAAMN,KAAOM,KAAK4C,OACnB5C,KAAK4C,OAAOlD,GAAKyB,QAErB,IAAK,MAAMzB,KAAOM,KAAKo9B,SAAU,CAC7B,MAAMyB,EAAU7+B,KAAKo9B,SAAS19B,GAC1Bm/B,IACAA,EAAQ/K,UACR+K,EAAQvL,WAAY,EAE5B,CACAtzB,KAAKoC,QAAU,IACnB,CACAi8B,iBAAAA,CAAkB3+B,EAAK+D,GACfzD,KAAKq9B,mBAAmBlqB,IAAIzT,IAC5BM,KAAKq9B,mBAAmBr4B,IAAItF,EAA5BM,GAEJ,MAAM8+B,EAAmBzS,EAAAA,EAAelZ,IAAIzT,GACxCo/B,GAAoB9+B,KAAK++B,iBACzB/+B,KAAK++B,kBAET,MAAMC,EAAiBv7B,EAAMO,GAAG,UAAWi7B,IACvCj/B,KAAK4tB,aAAaluB,GAAOu/B,EACzBj/B,KAAKZ,MAAM8e,UAAY9Z,EAAAA,GAAM86B,UAAUl/B,KAAKw9B,cACxCsB,GAAoB9+B,KAAK69B,aACzB79B,KAAK69B,WAAWsB,kBAAmB,EACvC,IAEEC,EAAwB37B,EAAMO,GAAG,gBAAiBhE,KAAK+9B,gBAC7D,IAAIsB,EACAp4B,OAAOq4B,wBACPD,EAAkBp4B,OAAOq4B,sBAAsBt/B,KAAMN,EAAK+D,IAE9DzD,KAAKq9B,mBAAmB37B,IAAIhC,GAAK,KAC7Bs/B,IACAI,IACIC,GACAA,IACA57B,EAAMD,OACNC,EAAMa,MAAM,GAExB,CACA6qB,gBAAAA,CAAiBoQ,GAIb,OAAKv/B,KAAKoC,SACLpC,KAAKw/B,0BACNx/B,KAAKuJ,OAASg2B,EAAMh2B,KAGjBvJ,KAAKw/B,yBAAyBx/B,KAAKoC,QAASm9B,EAAMn9B,SAF9C,CAGf,CACAq9B,cAAAA,GACI,IAAI//B,EAAM,YACV,IAAKA,KAAOggC,GAAAA,EAAoB,CAC5B,MAAMC,EAAoBD,GAAAA,EAAmBhgC,GAC7C,IAAKigC,EACD,SACJ,MAAM,UAAEC,EAAWxM,QAASyM,GAAuBF,EAYnD,IARK3/B,KAAKo9B,SAAS19B,IACfmgC,GACAD,EAAU5/B,KAAKZ,SACfY,KAAKo9B,SAAS19B,GAAO,IAAImgC,EAAmB7/B,OAK5CA,KAAKo9B,SAAS19B,GAAM,CACpB,MAAMm/B,EAAU7+B,KAAKo9B,SAAS19B,GAC1Bm/B,EAAQvL,UACRuL,EAAQnW,UAGRmW,EAAQlL,QACRkL,EAAQvL,WAAY,EAE5B,CACJ,CACJ,CACAmK,YAAAA,GACIz9B,KAAK8/B,MAAM9/B,KAAK29B,YAAa39B,KAAK4tB,aAAc5tB,KAAKZ,MACzD,CAMAod,kBAAAA,GACI,OAAOxc,KAAKoC,QACNpC,KAAK+/B,2BAA2B//B,KAAKoC,QAASpC,KAAKZ,OJzQ/C,CACdyO,EAFe,CAASzI,IAAK,EAAGkD,IAAK,GAGrCuM,EAHe,CAASzP,IAAK,EAAGkD,IAAK,GI4QrC,CACA03B,cAAAA,CAAetgC,GACX,OAAOM,KAAK4tB,aAAaluB,EAC7B,CACAugC,cAAAA,CAAevgC,EAAK+D,GAChBzD,KAAK4tB,aAAaluB,GAAO+D,CAC7B,CAKAilB,MAAAA,CAAOtpB,EAAOivB,IACNjvB,EAAM4sB,mBAAqBhsB,KAAKZ,MAAM4sB,oBACtChsB,KAAK+9B,iBAET/9B,KAAK6zB,UAAY7zB,KAAKZ,MACtBY,KAAKZ,MAAQA,EACbY,KAAKk0B,oBAAsBl0B,KAAKquB,gBAChCruB,KAAKquB,gBAAkBA,EAIvB,IAAK,IAAIptB,EAAI,EAAGA,EAAIy7B,GAAkB17B,OAAQC,IAAK,CAC/C,MAAMvB,EAAMg9B,GAAkBz7B,GAC1BjB,KAAKu9B,uBAAuB79B,KAC5BM,KAAKu9B,uBAAuB79B,YACrBM,KAAKu9B,uBAAuB79B,IAEvC,MACMwgC,EAAW9gC,EADK,KAAOM,GAEzBwgC,IACAlgC,KAAKu9B,uBAAuB79B,GAAOM,KAAKgE,GAAGtE,EAAKwgC,GAExD,CACAlgC,KAAKs9B,iBEpTb,SAAqCpxB,EAAS4S,EAAM3b,GAChD,IAAK,MAAMzD,KAAOof,EAAM,CACpB,MAAMqhB,EAAYrhB,EAAKpf,GACjB0gC,EAAYj9B,EAAKzD,GACvB,IAAI+G,EAAAA,EAAAA,GAAc05B,GAKdj0B,EAAQ7F,SAAS3G,EAAKygC,QASrB,IAAI15B,EAAAA,EAAAA,GAAc25B,GAKnBl0B,EAAQ7F,SAAS3G,EAAKuG,EAAYk6B,EAAW,CAAE38B,MAAO0I,UAErD,GAAIk0B,IAAcD,EAMnB,GAAIj0B,EAAQ/F,SAASzG,GAAM,CACvB,MAAM2gC,EAAgBn0B,EAAQ9F,SAAS1G,IACP,IAA5B2gC,EAAcrO,UACdqO,EAAcv7B,KAAKq7B,GAEbE,EAAc98B,aACpB88B,EAAc3+B,IAAIy+B,EAE1B,KACK,CACD,MAAMlB,EAAc/yB,EAAQ8zB,eAAetgC,GAC3CwM,EAAQ7F,SAAS3G,EAAKuG,OAA4B1G,IAAhB0/B,EAA4BA,EAAckB,EAAW,CAAE38B,MAAO0I,IACpG,CAER,CAEA,IAAK,MAAMxM,KAAOyD,OACI5D,IAAduf,EAAKpf,IACLwM,EAAQo0B,YAAY5gC,GAE5B,OAAOof,CACX,CFgQgCyhB,CAA4BvgC,KAAMA,KAAK48B,4BAA4Bx9B,EAAOY,KAAK6zB,UAAW7zB,MAAOA,KAAKs9B,kBAC1Ht9B,KAAKwgC,wBACLxgC,KAAKwgC,yBAETxgC,KAAKke,UAAYle,KAAKke,SAASle,KACnC,CACAX,QAAAA,GACI,OAAOW,KAAKZ,KAChB,CAIAqhC,UAAAA,CAAW1tB,GACP,OAAO/S,KAAKZ,MAAMshC,SAAW1gC,KAAKZ,MAAMshC,SAAS3tB,QAAQxT,CAC7D,CAIA4sB,oBAAAA,GACI,OAAOnsB,KAAKZ,MAAMK,UACtB,CACAkhC,qBAAAA,GACI,OAAO3gC,KAAKZ,MAAMwhC,kBACtB,CACAC,qBAAAA,GACI,OAAO7gC,KAAKm9B,cACNn9B,KACAA,KAAK2vB,OACD3vB,KAAK2vB,OAAOkR,6BACZthC,CACd,CAIA6+B,eAAAA,CAAgBrP,GACZ,MAAM+R,EAAqB9gC,KAAK6gC,wBAChC,GAAIC,EAGA,OAFAA,EAAmBtS,iBACfsS,EAAmBtS,gBAAgBtuB,IAAI6uB,GACpC,IAAM+R,EAAmBtS,gBAAgBrU,OAAO4U,EAE/D,CAIA1oB,QAAAA,CAAS3G,EAAK+D,GAEV,MAAM48B,EAAgBrgC,KAAK4R,OAAO5M,IAAItF,GAClC+D,IAAU48B,IACNA,GACArgC,KAAKsgC,YAAY5gC,GACrBM,KAAKq+B,kBAAkB3+B,EAAK+D,GAC5BzD,KAAK4R,OAAOlQ,IAAIhC,EAAK+D,GACrBzD,KAAK4tB,aAAaluB,GAAO+D,EAAMuB,MAEvC,CAIAs7B,WAAAA,CAAY5gC,GACRM,KAAK4R,OAAOuI,OAAOza,GACnB,MAAMyE,EAAcnE,KAAKq9B,mBAAmBr4B,IAAItF,GAC5CyE,IACAA,IACAnE,KAAKq9B,mBAAmBljB,OAAOza,WAE5BM,KAAK4tB,aAAaluB,GACzBM,KAAK+gC,2BAA2BrhC,EAAKM,KAAK29B,YAC9C,CAIAx3B,QAAAA,CAASzG,GACL,OAAOM,KAAK4R,OAAOuB,IAAIzT,EAC3B,CACA0G,QAAAA,CAAS1G,EAAKwT,GACV,GAAIlT,KAAKZ,MAAMwS,QAAU5R,KAAKZ,MAAMwS,OAAOlS,GACvC,OAAOM,KAAKZ,MAAMwS,OAAOlS,GAE7B,IAAI+D,EAAQzD,KAAK4R,OAAO5M,IAAItF,GAK5B,YAJcH,IAAVkE,QAAwClE,IAAjB2T,IACvBzP,EAAQwC,EAA6B,OAAjBiN,OAAwB3T,EAAY2T,EAAc,CAAE1P,MAAOxD,OAC/EA,KAAKqG,SAAS3G,EAAK+D,IAEhBA,CACX,CAMAuW,SAAAA,CAAUta,EAAKqc,GACX,IAAItY,OAAmClE,IAA3BS,KAAK4tB,aAAaluB,IAAuBM,KAAKoC,QAEpDpC,KAAKghC,uBAAuBhhC,KAAKZ,MAAOM,IACtCM,KAAKihC,sBAAsBjhC,KAAKoC,QAAS1C,EAAKM,KAAKwC,SAFrDxC,KAAK4tB,aAAaluB,GFzYToD,MEuZf,YAXcvD,IAAVkE,GAAiC,OAAVA,IACF,kBAAVA,IACN4W,GAAkB5W,IAAUoL,GAAkBpL,IAE/CA,EAAQE,WAAWF,IFhZZX,EEkZaW,GFlZP+4B,GAAW/gB,KAAKN,GAAcrY,KEkZb2P,GAAQ3D,KAAKiN,KAC3CtY,EAAQiP,GAAkBhT,EAAKqc,KAEnC/b,KAAKkhC,cAAcxhC,GAAK+G,EAAAA,EAAAA,GAAchD,GAASA,EAAMuB,MAAQvB,KAE1DgD,EAAAA,EAAAA,GAAchD,GAASA,EAAMuB,MAAQvB,CAChD,CAKAy9B,aAAAA,CAAcxhC,EAAK+D,GACfzD,KAAKg+B,WAAWt+B,GAAO+D,CAC3B,CAKA8uB,aAAAA,CAAc7yB,GACV,MAAM,QAAEkwB,GAAY5vB,KAAKZ,MACzB,IAAI+hC,EACJ,GAAuB,kBAAZvR,GAA2C,kBAAZA,EAAsB,CAC5D,MAAMxB,GAAU9uB,EAAAA,EAAAA,GAAwBU,KAAKZ,MAAOwwB,EAAS5vB,KAAKquB,iBAAiBlvB,QAC/EivB,IACA+S,EAAmB/S,EAAQ1uB,GAEnC,CAIA,GAAIkwB,QAAgCrwB,IAArB4hC,EACX,OAAOA,EAMX,MAAMplB,EAAS/b,KAAKghC,uBAAuBhhC,KAAKZ,MAAOM,GACvD,YAAeH,IAAXwc,IAAyBtV,EAAAA,EAAAA,GAAcsV,QAMRxc,IAA5BS,KAAKi+B,cAAcv+B,SACDH,IAArB4hC,OACE5hC,EACAS,KAAKg+B,WAAWt+B,GARXqc,CASf,CACA/X,EAAAA,CAAGC,EAAWC,GAIV,OAHKlE,KAAK4C,OAAOqB,KACbjE,KAAK4C,OAAOqB,GAAa,IAAInE,GAE1BE,KAAK4C,OAAOqB,GAAW/D,IAAIgE,EACtC,CACAvD,MAAAA,CAAOsD,GACH,GAAIjE,KAAK4C,OAAOqB,GAAY,SAAAmc,EAAA3d,UAAAzB,OADXogC,EAAI,IAAA13B,MAAA0W,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ8gB,EAAI9gB,EAAA,GAAA7d,UAAA6d,GAEjBtgB,KAAK4C,OAAOqB,GAAWtD,UAAUygC,EACrC,CACJ,EGrdJ,MAAMC,WAAyB1E,GAC3B58B,WAAAA,GACI4b,SAASlZ,WACTzC,KAAKsZ,iBAAmBoC,EAC5B,CACA8jB,wBAAAA,CAAyB5+B,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE0gC,wBAAwBzgC,GAAS,GAAK,CACnD,CACAmgC,sBAAAA,CAAuB5hC,EAAOM,GAC1B,OAAON,EAAMw+B,MACPx+B,EAAMw+B,MAAMl+B,QACZH,CACV,CACAwhC,0BAAAA,CAA2BrhC,EAAG6K,GAAmB,IAAjB,KAAEg3B,EAAI,MAAE3D,GAAOrzB,SACpCg3B,EAAK7hC,UACLk+B,EAAMl+B,EACjB,CACA8gC,sBAAAA,GACQxgC,KAAKwhC,oBACLxhC,KAAKwhC,2BACExhC,KAAKwhC,mBAEhB,MAAM,SAAEtE,GAAal9B,KAAKZ,OACtBqH,EAAAA,EAAAA,GAAcy2B,KACdl9B,KAAKwhC,kBAAoBtE,EAASl5B,GAAG,UAAWiiB,IACxCjmB,KAAKoC,UACLpC,KAAKoC,QAAQq/B,YAAc,GAAGxb,IAClC,IAGZ,E,kCC3BJ,MAAMyb,WAA0BL,GAC5BthC,WAAAA,GACI4b,SAASlZ,WACTzC,KAAKuJ,KAAO,OACZvJ,KAAK09B,eAAiBiE,GAAAA,CAC1B,CACAV,qBAAAA,CAAsBnF,EAAUp8B,GAC5B,GAAI2sB,EAAAA,EAAelZ,IAAIzT,GACnB,MpFsDekiC,EAAC9F,EAAU/oB,KAClC,MAAM,UAAE7C,EAAY,QAAW6K,iBAAiB+gB,GAChD,OAAO9lB,GAAwB9F,EAAW6C,EAAK,EoFxDhC6uB,CAAmB9F,EAAUp8B,GAEnC,CACD,MAAMmiC,GAdQ31B,EAcyB4vB,EAbxC70B,OAAO8T,iBAAiB7O,IAcjBzI,IAASq+B,EAAAA,GAAAA,GAAkBpiC,GAC3BmiC,EAAc7mB,iBAAiBtb,GAC/BmiC,EAAcniC,KAAS,EAC7B,MAAwB,kBAAV+D,EAAqBA,EAAM6S,OAAS7S,CACtD,CAnBR,IAA0ByI,CAoBtB,CACA6zB,0BAAAA,CAA2BjE,EAAQvxB,GAA0B,IAAxB,mBAAEq2B,GAAoBr2B,EACvD,OAAOiS,GAAmBsf,EAAU8E,EACxC,CACAd,KAAAA,CAAMnC,EAAa/P,EAAcxuB,IAC7B2iC,EAAAA,GAAAA,GAAgBpE,EAAa/P,EAAcxuB,EAAM4sB,kBACrD,CACA4Q,2BAAAA,CAA4Bx9B,EAAOy0B,EAAW50B,GAC1C,OAAO29B,EAAAA,GAAAA,GAA4Bx9B,EAAOy0B,EAAW50B,EACzD,E,yECzBJ,MAAM+iC,WAAyBX,GAC3BthC,WAAAA,GACI4b,SAASlZ,WACTzC,KAAKuJ,KAAO,MACZvJ,KAAKiiC,UAAW,EAChBjiC,KAAK+/B,2BAA6B1D,GAClCr8B,KAAKkiC,iBAAmB,KAChBliC,KAAKoC,UAAYpC,KAAK29B,YAAYwE,aAClCC,EAAAA,GAAAA,GAAoBpiC,KAAKoC,QAASpC,KAAK29B,YAC3C,CAER,CACAqD,sBAAAA,CAAuB5hC,EAAOM,GAC1B,OAAON,EAAMM,EACjB,CACAuhC,qBAAAA,CAAsBnF,EAAUp8B,GAC5B,GAAI2sB,EAAAA,EAAelZ,IAAIzT,GAAM,CACzB,MAAM2iC,EAAcnuB,GAAoBxU,GACxC,OAAO2iC,GAAcA,EAAY/f,SAAe,CACpD,CAEA,OADA5iB,EAAO4iC,GAAAA,EAAoBnvB,IAAIzT,GAA0BA,GAAnB6iC,EAAAA,GAAAA,GAAY7iC,GAC3Co8B,EAAS0G,aAAa9iC,EACjC,CACAk9B,2BAAAA,CAA4Bx9B,EAAOy0B,EAAW50B,GAC1C,OAAO29B,EAAAA,GAAAA,GAA4Bx9B,EAAOy0B,EAAW50B,EACzD,CACA8/B,eAAAA,GACQ/+B,KAAKoC,UAAYpC,KAAK29B,YAAYwE,YAClC/9B,EAAAA,GAAMyxB,WAAW71B,KAAKkiC,iBAE9B,CACApC,KAAAA,CAAMnC,EAAa/P,EAAcxuB,IAC7BqjC,EAAAA,GAAAA,GAAc9E,EAAa/P,EAAc5tB,KAAKiiC,SAAU7iC,EAAM4sB,kBAClE,CACA0R,cAAAA,CAAe5B,EAAU6B,EAAa+E,EAAW7E,IAC7C8E,EAAAA,GAAAA,GAAU7G,EAAU6B,EAAa+E,EAAW7E,EAChD,CACAlK,KAAAA,CAAMmI,GACF97B,KAAKiiC,UAAWA,EAAAA,GAAAA,GAASnG,EAASxD,SAClC3c,MAAMgY,MAAMmI,EAChB,E,cCjDJ,IAAI8G,GCGiB,CACjBC,SCH2BC,CAACC,EAAWvgC,KAChCwgC,EAAAA,GAAAA,GAAeD,GAChB,IAAIf,GAAiBx/B,GACrB,IAAIk/B,GAAkBl/B,EAAS,CAC7BygC,gBAAiBF,IAAcG,GAAAA,cDApC97B,MACA0yB,G","sources":["../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/@heroui/dom-animation/dist/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"],"sourcesContent":["import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.7.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nexport { isWaapiSupportedEasing };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue?.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { createGeneratorEasing, supportsLinearEasing, calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : \"easeOut\";\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = this.currentTime ?? 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n    get finished() {\n        return this.currentFinishedPromise;\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, startWaapiAnimation, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime ?? this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    get finished() {\n        return this.resolved.animation.finished;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupAnimationWithThen } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupAnimationWithThen([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.7.3\", `Attempting to mix Motion versions ${nextValue.version} with 12.7.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","\"use client\";\n\n// src/index.ts\nimport { domAnimation } from \"framer-motion\";\nvar index_default = domAnimation;\nexport {\n  index_default as default\n};\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n"],"names":["resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","getValueTransition","transition","key","positionalKeys","Set","transformPropOrder","SubscriptionManager","constructor","this","subscriptions","add","handler","arr","item","indexOf","push","index","splice","removeItem","notify","a","b","c","numSubscriptions","length","i","getSize","clear","velocityPerSecond","velocity","frameDuration","now","clearTime","time","set","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","queueMicrotask","collectMotionValues","current","MotionValue","init","_this","options","arguments","version","canTrackVelocity","events","updateAndNotify","v","render","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","value","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","callback","unsubscribe","frame","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","delta","jump","endAnimation","get","getPrevious","getVelocity","Math","min","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","Boolean","isMotionValue","WillChange","newWillChange","getOptimisedAppearId","optimizedAppearDataAttribute","memo","result","supportsScrollTimeline","window","ScrollTimeline","GroupAnimation","animations","runAll","filter","finished","all","map","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","forEach","cancel","speed","startTime","duration","max","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","onResolve","_onReject","finally","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isGenerator","type","isBezierDefinition","easing","Array","isArray","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","e","cubicBezierAsString","_ref","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","isWaapiSupportedEasing","every","activeAnimations","layout","mainThread","waapi","generateLinearEasing","resolution","points","numPoints","round","substring","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","element","valueName","keyframes","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","offset","statsBuffer","fill","iterations","direction","onfinish","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","alpha","match","rgbUnit","number","transform","clamp","clampRgbUnit","rgba","parse","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","percent","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","split","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","unit","defaultValue","has","functionRegex","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","scale","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","px","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","token","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","isCSSVariableToken","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","reduce","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGeneratorEasing","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","update","passTimestamp","cancelFrame","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","variantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","extractEventInfo","point","pageX","pageY","handleHoverEvent","lifecycle","postRender","addDomEvent","addEventListener","removeEventListener","isNodeOrChild","parentElement","focusableElements","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","isPrimary","bubbles","isValidPressEvent","button","isPrimaryPointer","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tagName","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","instance","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","createBox","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","children","isVariantNode","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","remove","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","args","DOMVisualElement","compareDocumentPosition","vars","childSubscription","textContent","HTMLVisualElement","renderHTML","readTransformValue","computedStyle","isCSSVariableName","buildHTMLStyles","SVGVisualElement","isSVGTag","updateDimensions","dimensions","updateSVGDimensions","defaultType","camelCaseAttributes","camelToDash","getAttribute","buildSVGAttrs","styleProp","renderSVG","index_default","renderer","createDomVisualElement","Component","isSVGComponent","allowProjection","Fragment"],"sourceRoot":""}